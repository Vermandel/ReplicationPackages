%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'call_EZ';
M_.dynare_version = '6.1';
oo_.dynare_version = '6.1';
options_.dynare_version = '6.1';
%
% Some global variables initialization
%
global_initialization;
M_.parameter_used_with_lead_lag = true;
M_.exo_names = cell(1,1);
M_.exo_names_tex = cell(1,1);
M_.exo_names_long = cell(1,1);
M_.exo_names(1) = {'eaY'};
M_.exo_names_tex(1) = {'{std(\eta_{At})}'};
M_.exo_names_long(1) = {'Productivity shock'};
M_.endo_names = cell(63,1);
M_.endo_names_tex = cell(63,1);
M_.endo_names_long = cell(63,1);
M_.endo_names(1) = {'ce'};
M_.endo_names_tex(1) = {'ce'};
M_.endo_names_long(1) = {'ce'};
M_.endo_names(2) = {'sdf'};
M_.endo_names_tex(2) = {'sdf'};
M_.endo_names_long(2) = {'sdf'};
M_.endo_names(3) = {'c'};
M_.endo_names_tex(3) = {'c'};
M_.endo_names_long(3) = {'c'};
M_.endo_names(4) = {'kT'};
M_.endo_names_tex(4) = {'kT'};
M_.endo_names_long(4) = {'kT'};
M_.endo_names(5) = {'x'};
M_.endo_names_tex(5) = {'x'};
M_.endo_names_long(5) = {'x'};
M_.endo_names(6) = {'kY'};
M_.endo_names_tex(6) = {'kY'};
M_.endo_names_long(6) = {'kY'};
M_.endo_names(7) = {'kH'};
M_.endo_names_tex(7) = {'kH'};
M_.endo_names_long(7) = {'kH'};
M_.endo_names(8) = {'iT'};
M_.endo_names_tex(8) = {'iT'};
M_.endo_names_long(8) = {'iT'};
M_.endo_names(9) = {'lambda'};
M_.endo_names_tex(9) = {'lambda'};
M_.endo_names_long(9) = {'lambda'};
M_.endo_names(10) = {'q'};
M_.endo_names_tex(10) = {'q'};
M_.endo_names_long(10) = {'q'};
M_.endo_names(11) = {'phi'};
M_.endo_names_tex(11) = {'phi'};
M_.endo_names_long(11) = {'phi'};
M_.endo_names(12) = {'varrho'};
M_.endo_names_tex(12) = {'varrho'};
M_.endo_names_long(12) = {'varrho'};
M_.endo_names(13) = {'gamma'};
M_.endo_names_tex(13) = {'gamma'};
M_.endo_names_long(13) = {'gamma'};
M_.endo_names(14) = {'y'};
M_.endo_names_tex(14) = {'y'};
M_.endo_names_long(14) = {'y'};
M_.endo_names(15) = {'iH'};
M_.endo_names_tex(15) = {'iH'};
M_.endo_names_long(15) = {'iH'};
M_.endo_names(16) = {'d'};
M_.endo_names_tex(16) = {'d'};
M_.endo_names_long(16) = {'d'};
M_.endo_names(17) = {'aY'};
M_.endo_names_tex(17) = {'aY'};
M_.endo_names_long(17) = {'aY'};
M_.endo_names(18) = {'e'};
M_.endo_names_tex(18) = {'e'};
M_.endo_names_long(18) = {'e'};
M_.endo_names(19) = {'w'};
M_.endo_names_tex(19) = {'w'};
M_.endo_names_long(19) = {'w'};
M_.endo_names(20) = {'rF'};
M_.endo_names_tex(20) = {'rF'};
M_.endo_names_long(20) = {'rF'};
M_.endo_names(21) = {'pE'};
M_.endo_names_tex(21) = {'pE'};
M_.endo_names_long(21) = {'pE'};
M_.endo_names(22) = {'realEPquat'};
M_.endo_names_tex(22) = {'realEPquat'};
M_.endo_names_long(22) = {'realEPquat'};
M_.endo_names(23) = {'gy'};
M_.endo_names_tex(23) = {'gy'};
M_.endo_names_long(23) = {'gy'};
M_.endo_names(24) = {'gc'};
M_.endo_names_tex(24) = {'gc'};
M_.endo_names_long(24) = {'gc'};
M_.endo_names(25) = {'giT'};
M_.endo_names_tex(25) = {'giT'};
M_.endo_names_long(25) = {'giT'};
M_.endo_names(26) = {'cyrat'};
M_.endo_names_tex(26) = {'cyrat'};
M_.endo_names_long(26) = {'cyrat'};
M_.endo_names(27) = {'rFquat'};
M_.endo_names_tex(27) = {'rFquat'};
M_.endo_names_long(27) = {'rFquat'};
M_.endo_names(28) = {'kHkYrat'};
M_.endo_names_tex(28) = {'kHkYrat'};
M_.endo_names_long(28) = {'kHkYrat'};
M_.endo_names(29) = {'SCC'};
M_.endo_names_tex(29) = {'SCC'};
M_.endo_names_long(29) = {'SCC'};
M_.endo_names(30) = {'c_x'};
M_.endo_names_tex(30) = {'c\_x'};
M_.endo_names_long(30) = {'c_x'};
M_.endo_names(31) = {'z'};
M_.endo_names_tex(31) = {'z'};
M_.endo_names_long(31) = {'z'};
M_.endo_names(32) = {'multH'};
M_.endo_names_tex(32) = {'multH'};
M_.endo_names_long(32) = {'multH'};
M_.endo_names(33) = {'u'};
M_.endo_names_tex(33) = {'u'};
M_.endo_names_long(33) = {'u'};
M_.endo_names(34) = {'U'};
M_.endo_names_tex(34) = {'U'};
M_.endo_names_long(34) = {'U'};
M_.endo_names(35) = {'gq'};
M_.endo_names_tex(35) = {'gq'};
M_.endo_names_long(35) = {'gq'};
M_.endo_names(36) = {'gd'};
M_.endo_names_tex(36) = {'gd'};
M_.endo_names_long(36) = {'gd'};
M_.endo_names(37) = {'gE'};
M_.endo_names_tex(37) = {'gE'};
M_.endo_names_long(37) = {'gE'};
M_.endo_names(38) = {'X'};
M_.endo_names_tex(38) = {'X'};
M_.endo_names_long(38) = {'X'};
M_.endo_names(39) = {'pB'};
M_.endo_names_tex(39) = {'pB'};
M_.endo_names_long(39) = {'pB'};
M_.endo_names(40) = {'ln_SCC'};
M_.endo_names_tex(40) = {'ln\_SCC'};
M_.endo_names_long(40) = {'ln_SCC'};
M_.endo_names(41) = {'ln_c'};
M_.endo_names_tex(41) = {'ln\_c'};
M_.endo_names_long(41) = {'ln_c'};
M_.endo_names(42) = {'ln_y'};
M_.endo_names_tex(42) = {'ln\_y'};
M_.endo_names_long(42) = {'ln_y'};
M_.endo_names(43) = {'Esdf'};
M_.endo_names_tex(43) = {'Esdf'};
M_.endo_names_long(43) = {'Esdf'};
M_.endo_names(44) = {'muSDF'};
M_.endo_names_tex(44) = {'muSDF'};
M_.endo_names_long(44) = {'muSDF'};
M_.endo_names(45) = {'varSDF'};
M_.endo_names_tex(45) = {'varSDF'};
M_.endo_names_long(45) = {'varSDF'};
M_.endo_names(46) = {'skewSDF'};
M_.endo_names_tex(46) = {'skewSDF'};
M_.endo_names_long(46) = {'skewSDF'};
M_.endo_names(47) = {'ln_pd'};
M_.endo_names_tex(47) = {'ln\_pd'};
M_.endo_names_long(47) = {'ln_pd'};
M_.endo_names(48) = {'asset_return'};
M_.endo_names_tex(48) = {'asset\_return'};
M_.endo_names_long(48) = {'asset_return'};
M_.endo_names(49) = {'EC1'};
M_.endo_names_tex(49) = {'EC1'};
M_.endo_names_long(49) = {'EC1'};
M_.endo_names(50) = {'EretB'};
M_.endo_names_tex(50) = {'EretB'};
M_.endo_names_long(50) = {'EretB'};
M_.endo_names(51) = {'bpann'};
M_.endo_names_tex(51) = {'bpann'};
M_.endo_names_long(51) = {'bpann'};
M_.endo_names(52) = {'ln_c100'};
M_.endo_names_tex(52) = {'ln\_c100'};
M_.endo_names_long(52) = {'ln_c100'};
M_.endo_names(53) = {'ESCC'};
M_.endo_names_tex(53) = {'ESCC'};
M_.endo_names_long(53) = {'ESCC'};
M_.endo_names(54) = {'vE_irfs'};
M_.endo_names_tex(54) = {'vE\_irfs'};
M_.endo_names_long(54) = {'vE_irfs'};
M_.endo_names(55) = {'EPquat'};
M_.endo_names_tex(55) = {'EPquat'};
M_.endo_names_long(55) = {'EPquat'};
M_.endo_names(56) = {'ln_z'};
M_.endo_names_tex(56) = {'ln\_z'};
M_.endo_names_long(56) = {'ln_z'};
M_.endo_names(57) = {'ln_EP'};
M_.endo_names_tex(57) = {'ln\_EP'};
M_.endo_names_long(57) = {'ln_EP'};
M_.endo_names(58) = {'ln_rF'};
M_.endo_names_tex(58) = {'ln\_rF'};
M_.endo_names_long(58) = {'ln_rF'};
M_.endo_names(59) = {'mu'};
M_.endo_names_tex(59) = {'mu'};
M_.endo_names_long(59) = {'mu'};
M_.endo_names(60) = {'vE'};
M_.endo_names_tex(60) = {'vE'};
M_.endo_names_long(60) = {'vE'};
M_.endo_names(61) = {'vX'};
M_.endo_names_tex(61) = {'vX'};
M_.endo_names_long(61) = {'vX'};
M_.endo_names(62) = {'AUX_ENDO_LAG_4_1'};
M_.endo_names_tex(62) = {'AUX\_ENDO\_LAG\_4\_1'};
M_.endo_names_long(62) = {'AUX_ENDO_LAG_4_1'};
M_.endo_names(63) = {'AUX_ENDO_LAG_30_1'};
M_.endo_names_tex(63) = {'AUX\_ENDO\_LAG\_30\_1'};
M_.endo_names_long(63) = {'AUX_ENDO_LAG_30_1'};
M_.endo_partitions = struct();
M_.param_names = cell(44,1);
M_.param_names_tex = cell(44,1);
M_.param_names_long = cell(44,1);
M_.param_names(1) = {'nu'};
M_.param_names_tex(1) = {'nu'};
M_.param_names_long(1) = {'nu'};
M_.param_names(2) = {'EIS'};
M_.param_names_tex(2) = {'EIS'};
M_.param_names_long(2) = {'EIS'};
M_.param_names(3) = {'xbar'};
M_.param_names_tex(3) = {'xbar'};
M_.param_names_long(3) = {'xbar'};
M_.param_names(4) = {'iotaE'};
M_.param_names_tex(4) = {'iotaE'};
M_.param_names_long(4) = {'iotaE'};
M_.param_names(5) = {'iotaX'};
M_.param_names_tex(5) = {'iotaX'};
M_.param_names_long(5) = {'iotaX'};
M_.param_names(6) = {'scale_y'};
M_.param_names_tex(6) = {'scale\_y'};
M_.param_names_long(6) = {'scale_y'};
M_.param_names(7) = {'scale_ce'};
M_.param_names_tex(7) = {'scale\_ce'};
M_.param_names_long(7) = {'scale_ce'};
M_.param_names(8) = {'chi'};
M_.param_names_tex(8) = {'chi'};
M_.param_names_long(8) = {'chi'};
M_.param_names(9) = {'estar'};
M_.param_names_tex(9) = {'estar'};
M_.param_names_long(9) = {'estar'};
M_.param_names(10) = {'kappa'};
M_.param_names_tex(10) = {'kappa'};
M_.param_names_long(10) = {'kappa'};
M_.param_names(11) = {'thetaEZ'};
M_.param_names_tex(11) = {'{\theta}'};
M_.param_names_long(11) = {'Utility curvature'};
M_.param_names(12) = {'mhab'};
M_.param_names_tex(12) = {'{\varpi}'};
M_.param_names_long(12) = {'Habit smoothing'};
M_.param_names(13) = {'eps'};
M_.param_names_tex(13) = {'{\epsilon}'};
M_.param_names_long(13) = {'Investment cost'};
M_.param_names(14) = {'squig'};
M_.param_names_tex(14) = {'{\xi}'};
M_.param_names_long(14) = {'Capital in R\&D'};
M_.param_names(15) = {'beta'};
M_.param_names_tex(15) = {'{\beta}'};
M_.param_names_long(15) = {'Discount factor'};
M_.param_names(16) = {'gamma_sts'};
M_.param_names_tex(16) = {'{g}'};
M_.param_names_long(16) = {'Steady state growth'};
M_.param_names(17) = {'sigma'};
M_.param_names_tex(17) = {'{\sigma}'};
M_.param_names_long(17) = {'Risk aversion'};
M_.param_names(18) = {'rhoY'};
M_.param_names_tex(18) = {'{\rho_A}'};
M_.param_names_long(18) = {'Persistence productivity'};
M_.param_names(19) = {'deltaK'};
M_.param_names_tex(19) = {'{\delta_K}'};
M_.param_names_long(19) = {'Capital depreciation'};
M_.param_names(20) = {'Sg'};
M_.param_names_tex(20) = {'Sg'};
M_.param_names_long(20) = {'Sg'};
M_.param_names(21) = {'nY_sts'};
M_.param_names_tex(21) = {'nY\_sts'};
M_.param_names_long(21) = {'nY_sts'};
M_.param_names(22) = {'nH_sts'};
M_.param_names_tex(22) = {'nH\_sts'};
M_.param_names_long(22) = {'nH_sts'};
M_.param_names(23) = {'th1'};
M_.param_names_tex(23) = {'th1'};
M_.param_names_long(23) = {'th1'};
M_.param_names(24) = {'th2'};
M_.param_names_tex(24) = {'th2'};
M_.param_names_long(24) = {'th2'};
M_.param_names(25) = {'zetaY'};
M_.param_names_tex(25) = {'zetaY'};
M_.param_names_long(25) = {'zetaY'};
M_.param_names(26) = {'zetaY_tilda'};
M_.param_names_tex(26) = {'zetaY\_tilda'};
M_.param_names_long(26) = {'zetaY_tilda'};
M_.param_names(27) = {'deltaX'};
M_.param_names_tex(27) = {'deltaX'};
M_.param_names_long(27) = {'deltaX'};
M_.param_names(28) = {'alpha'};
M_.param_names_tex(28) = {'alpha'};
M_.param_names_long(28) = {'alpha'};
M_.param_names(29) = {'g'};
M_.param_names_tex(29) = {'g'};
M_.param_names_long(29) = {'g'};
M_.param_names(30) = {'std_y'};
M_.param_names_tex(30) = {'std\_y'};
M_.param_names_long(30) = {'std_y'};
M_.param_names(31) = {'xfactor'};
M_.param_names_tex(31) = {'xfactor'};
M_.param_names_long(31) = {'xfactor'};
M_.param_names(32) = {'scale_u'};
M_.param_names_tex(32) = {'scale\_u'};
M_.param_names_long(32) = {'scale_u'};
M_.param_names(33) = {'vartheta'};
M_.param_names_tex(33) = {'vartheta'};
M_.param_names_long(33) = {'vartheta'};
M_.param_names(34) = {'vtax'};
M_.param_names_tex(34) = {'vtax'};
M_.param_names_long(34) = {'vtax'};
M_.param_names(35) = {'eD'};
M_.param_names_tex(35) = {'eD'};
M_.param_names_long(35) = {'eD'};
M_.param_names(36) = {'eC'};
M_.param_names_tex(36) = {'eC'};
M_.param_names_long(36) = {'eC'};
M_.param_names(37) = {'eE'};
M_.param_names_tex(37) = {'eE'};
M_.param_names_long(37) = {'eE'};
M_.param_names(38) = {'eG'};
M_.param_names_tex(38) = {'eG'};
M_.param_names_long(38) = {'eG'};
M_.param_names(39) = {'aD'};
M_.param_names_tex(39) = {'aD'};
M_.param_names_long(39) = {'aD'};
M_.param_names(40) = {'aC'};
M_.param_names_tex(40) = {'aC'};
M_.param_names_long(40) = {'aC'};
M_.param_names(41) = {'aE'};
M_.param_names_tex(41) = {'aE'};
M_.param_names_long(41) = {'aE'};
M_.param_names(42) = {'aG'};
M_.param_names_tex(42) = {'aG'};
M_.param_names_long(42) = {'aG'};
M_.param_names(43) = {'eta1'};
M_.param_names_tex(43) = {'eta1'};
M_.param_names_long(43) = {'eta1'};
M_.param_names(44) = {'eta2'};
M_.param_names_tex(44) = {'eta2'};
M_.param_names_long(44) = {'eta2'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 1;
M_.endo_nbr = 63;
M_.param_nbr = 44;
M_.orig_endo_nbr = 61;
M_.aux_vars(1).endo_index = 62;
M_.aux_vars(1).type = 1;
M_.aux_vars(1).orig_index = 5;
M_.aux_vars(1).orig_lead_lag = -1;
M_.aux_vars(1).orig_expr = 'x(-1)';
M_.aux_vars(2).endo_index = 63;
M_.aux_vars(2).type = 1;
M_.aux_vars(2).orig_index = 31;
M_.aux_vars(2).orig_lead_lag = -1;
M_.aux_vars(2).orig_expr = 'z(-1)';
M_.Sigma_e = zeros(1, 1);
M_.Correlation_matrix = eye(1, 1);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [1 2 3 4 5 6 7 8 10 12 13 14 15 16 17 20 21 22 23 24 25 27 28 29 30 31 32 33 34 36 38 39 40 42 43 46 47 48 49 50 51 54 55 56 58 59 60 61];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 63;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 2;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 2;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 2;
M_.lead_lag_incidence = [
 1 17 0;
 0 18 80;
 2 19 81;
 3 20 0;
 4 21 0;
 0 22 82;
 0 23 0;
 5 24 83;
 0 25 0;
 6 26 84;
 0 27 85;
 0 28 86;
 7 29 0;
 8 30 87;
 0 31 88;
 9 32 89;
 10 33 0;
 11 34 0;
 0 35 0;
 0 36 0;
 12 37 90;
 0 38 0;
 0 39 0;
 0 40 0;
 0 41 0;
 0 42 0;
 0 43 0;
 0 44 0;
 0 45 91;
 0 46 0;
 13 47 0;
 14 48 92;
 0 49 93;
 0 50 0;
 0 51 0;
 0 52 0;
 0 53 0;
 0 54 0;
 0 55 94;
 0 56 0;
 0 57 0;
 0 58 0;
 0 59 0;
 0 60 0;
 0 61 0;
 0 62 0;
 0 63 0;
 0 64 0;
 0 65 0;
 0 66 0;
 0 67 0;
 0 68 0;
 0 69 0;
 0 70 0;
 0 71 0;
 0 72 0;
 0 73 0;
 0 74 0;
 0 75 0;
 0 76 0;
 0 77 95;
 15 78 0;
 16 79 0;]';
M_.nstatic = 38;
M_.nfwrd   = 9;
M_.npred   = 9;
M_.nboth   = 7;
M_.nsfwrd   = 16;
M_.nspred   = 16;
M_.ndynamic   = 25;
M_.dynamic_tmp_nbr = [56; 85; 120; 37; ];
M_.equations_tags = {
  1 , 'name' , '1' ;
  2 , 'name' , '2' ;
  3 , 'name' , 'lambda' ;
  4 , 'name' , 'multH' ;
  5 , 'name' , 'sdf' ;
  6 , 'name' , '6' ;
  7 , 'name' , 'iH' ;
  8 , 'name' , 'phi' ;
  9 , 'name' , 'gamma' ;
  10 , 'name' , '10' ;
  11 , 'name' , 'w' ;
  12 , 'name' , 'd' ;
  13 , 'name' , 'varrho' ;
  14 , 'name' , '14' ;
  15 , 'name' , 'q' ;
  16 , 'name' , '16' ;
  17 , 'name' , 'y' ;
  18 , 'name' , 'kT' ;
  19 , 'name' , '19' ;
  20 , 'name' , 'e' ;
  21 , 'name' , '21' ;
  22 , 'name' , '22' ;
  23 , 'name' , 'pE' ;
  24 , 'name' , '24' ;
  25 , 'name' , 'realEPquat' ;
  26 , 'name' , 'rFquat' ;
  27 , 'name' , 'cyrat' ;
  28 , 'name' , 'kHkYrat' ;
  29 , 'name' , 'gy' ;
  30 , 'name' , 'gc' ;
  31 , 'name' , 'giT' ;
  32 , 'name' , 'c_x' ;
  33 , 'name' , 'SCC' ;
  34 , 'name' , '34' ;
  35 , 'name' , '35' ;
  36 , 'name' , 'vX' ;
  37 , 'name' , 'U' ;
  38 , 'name' , 'gq' ;
  39 , 'name' , 'gd' ;
  40 , 'name' , 'gE' ;
  41 , 'name' , 'X' ;
  42 , 'name' , 'asset_return' ;
  43 , 'name' , 'EPquat' ;
  44 , 'name' , 'Esdf' ;
  45 , 'name' , 'muSDF' ;
  46 , 'name' , 'varSDF' ;
  47 , 'name' , 'skewSDF' ;
  48 , 'name' , 'ln_pd' ;
  49 , 'name' , 'EC1' ;
  50 , 'name' , 'pB' ;
  51 , 'name' , 'EretB' ;
  52 , 'name' , 'bpann' ;
  53 , 'name' , 'ESCC' ;
  54 , 'name' , 'ln_SCC' ;
  55 , 'name' , 'ln_c' ;
  56 , 'name' , 'ln_y' ;
  57 , 'name' , 'ln_c100' ;
  58 , 'name' , 'ln_EP' ;
  59 , 'name' , 'ln_rF' ;
  60 , 'name' , 'ln_z' ;
  61 , 'name' , 'vE_irfs' ;
};
M_.mapping.ce.eqidx = [1 2 4 5 ];
M_.mapping.sdf.eqidx = [5 8 15 23 24 33 36 44 45 46 47 50 ];
M_.mapping.c.eqidx = [1 3 4 5 6 21 27 30 32 33 36 49 55 ];
M_.mapping.kT.eqidx = [14 15 16 18 ];
M_.mapping.x.eqidx = [1 3 4 5 6 7 17 19 32 33 36 41 ];
M_.mapping.kY.eqidx = [10 15 17 18 28 ];
M_.mapping.kH.eqidx = [7 10 18 28 ];
M_.mapping.iT.eqidx = [12 14 15 16 21 31 ];
M_.mapping.lambda.eqidx = [3 ];
M_.mapping.q.eqidx = [14 15 38 ];
M_.mapping.phi.eqidx = [8 10 33 36 ];
M_.mapping.varrho.eqidx = [8 10 13 15 33 36 ];
M_.mapping.gamma.eqidx = [1 4 5 6 9 16 23 25 29 30 31 33 36 39 42 43 50 58 ];
M_.mapping.y.eqidx = [8 10 11 12 15 17 20 21 27 29 33 36 56 ];
M_.mapping.iH.eqidx = [7 8 9 10 33 36 ];
M_.mapping.d.eqidx = [12 23 25 39 42 43 48 58 ];
M_.mapping.aY.eqidx = [7 17 22 ];
M_.mapping.e.eqidx = [12 19 20 40 ];
M_.mapping.w.eqidx = [11 12 ];
M_.mapping.rF.eqidx = [24 25 26 43 52 58 59 ];
M_.mapping.pE.eqidx = [23 25 42 43 48 58 ];
M_.mapping.realEPquat.eqidx = [25 ];
M_.mapping.gy.eqidx = [29 ];
M_.mapping.gc.eqidx = [30 ];
M_.mapping.giT.eqidx = [31 ];
M_.mapping.cyrat.eqidx = [27 ];
M_.mapping.rFquat.eqidx = [26 ];
M_.mapping.kHkYrat.eqidx = [28 ];
M_.mapping.SCC.eqidx = [33 49 53 54 ];
M_.mapping.c_x.eqidx = [32 ];
M_.mapping.z.eqidx = [1 3 4 5 6 60 ];
M_.mapping.multH.eqidx = [3 4 5 ];
M_.mapping.u.eqidx = [1 2 3 4 5 37 ];
M_.mapping.eaY.eqidx = [22 ];
M_.mapping.U.eqidx = [37 ];
M_.mapping.gq.eqidx = [38 ];
M_.mapping.gd.eqidx = [39 ];
M_.mapping.gE.eqidx = [40 ];
M_.mapping.X.eqidx = [41 ];
M_.mapping.pB.eqidx = [50 51 ];
M_.mapping.ln_SCC.eqidx = [54 ];
M_.mapping.ln_c.eqidx = [55 57 ];
M_.mapping.ln_y.eqidx = [56 ];
M_.mapping.Esdf.eqidx = [44 ];
M_.mapping.muSDF.eqidx = [45 46 47 ];
M_.mapping.varSDF.eqidx = [46 ];
M_.mapping.skewSDF.eqidx = [47 ];
M_.mapping.ln_pd.eqidx = [48 ];
M_.mapping.asset_return.eqidx = [42 ];
M_.mapping.EC1.eqidx = [49 ];
M_.mapping.EretB.eqidx = [51 52 ];
M_.mapping.bpann.eqidx = [52 ];
M_.mapping.ln_c100.eqidx = [57 ];
M_.mapping.ESCC.eqidx = [53 ];
M_.mapping.vE_irfs.eqidx = [61 ];
M_.mapping.EPquat.eqidx = [43 ];
M_.mapping.ln_z.eqidx = [60 ];
M_.mapping.ln_EP.eqidx = [58 ];
M_.mapping.ln_rF.eqidx = [59 ];
M_.mapping.mu.eqidx = [12 13 20 21 34 ];
M_.mapping.vE.eqidx = [12 13 34 35 61 ];
M_.mapping.vX.eqidx = [35 36 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 3;
M_.block_structure.block(1).endo_nbr = 1;
M_.block_structure.block(1).mfs = 1;
M_.block_structure.block(1).equation = [ 22];
M_.block_structure.block(1).variable = [ 17];
M_.block_structure.block(1).is_linear = false;
M_.block_structure.block(1).NNZDerivatives = 2;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [0 1 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 23;
M_.block_structure.block(2).mfs = 22;
M_.block_structure.block(2).equation = [ 20 7 35 34 2 63 6 9 62 15 19 4 21 5 8 10 13 14 16 17 18 1 36];
M_.block_structure.block(2).variable = [ 18 7 60 59 1 63 31 13 62 4 5 32 3 2 11 15 12 10 8 14 6 33 61];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 101;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [4 5 6 7 8 9 10 11 12 0 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 55 56 57 58 59 60 61 62 63 64 65 66 ];
M_.block_structure.block(3).Simulation_Type = 2;
M_.block_structure.block(3).endo_nbr = 1;
M_.block_structure.block(3).mfs = 1;
M_.block_structure.block(3).equation = [ 50];
M_.block_structure.block(3).variable = [ 39];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 2;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [2 3 ];
M_.block_structure.block(4).Simulation_Type = 1;
M_.block_structure.block(4).endo_nbr = 2;
M_.block_structure.block(4).mfs = 2;
M_.block_structure.block(4).equation = [ 11 51];
M_.block_structure.block(4).variable = [ 19 50];
M_.block_structure.block(4).is_linear = true;
M_.block_structure.block(4).NNZDerivatives = 2;
M_.block_structure.block(4).bytecode_jacob_cols_to_sparse = [3 4 ];
M_.block_structure.block(5).Simulation_Type = 2;
M_.block_structure.block(5).endo_nbr = 1;
M_.block_structure.block(5).mfs = 1;
M_.block_structure.block(5).equation = [ 33];
M_.block_structure.block(5).variable = [ 29];
M_.block_structure.block(5).is_linear = true;
M_.block_structure.block(5).NNZDerivatives = 2;
M_.block_structure.block(5).bytecode_jacob_cols_to_sparse = [2 3 ];
M_.block_structure.block(6).Simulation_Type = 1;
M_.block_structure.block(6).endo_nbr = 3;
M_.block_structure.block(6).mfs = 3;
M_.block_structure.block(6).equation = [ 12 53 45];
M_.block_structure.block(6).variable = [ 16 53 44];
M_.block_structure.block(6).is_linear = true;
M_.block_structure.block(6).NNZDerivatives = 3;
M_.block_structure.block(6).bytecode_jacob_cols_to_sparse = [4 5 6 ];
M_.block_structure.block(7).Simulation_Type = 3;
M_.block_structure.block(7).endo_nbr = 1;
M_.block_structure.block(7).mfs = 1;
M_.block_structure.block(7).equation = [ 24];
M_.block_structure.block(7).variable = [ 20];
M_.block_structure.block(7).is_linear = false;
M_.block_structure.block(7).NNZDerivatives = 1;
M_.block_structure.block(7).bytecode_jacob_cols_to_sparse = [1 ];
M_.block_structure.block(8).Simulation_Type = 2;
M_.block_structure.block(8).endo_nbr = 1;
M_.block_structure.block(8).mfs = 1;
M_.block_structure.block(8).equation = [ 23];
M_.block_structure.block(8).variable = [ 21];
M_.block_structure.block(8).is_linear = true;
M_.block_structure.block(8).NNZDerivatives = 2;
M_.block_structure.block(8).bytecode_jacob_cols_to_sparse = [2 3 ];
M_.block_structure.block(9).Simulation_Type = 1;
M_.block_structure.block(9).endo_nbr = 30;
M_.block_structure.block(9).mfs = 30;
M_.block_structure.block(9).equation = [ 52 49 48 47 54 55 56 57 58 59 60 61 46 44 43 42 41 40 39 38 37 32 31 30 29 28 27 26 25 3];
M_.block_structure.block(9).variable = [ 51 49 47 46 40 41 42 52 57 58 56 54 45 43 55 48 38 37 36 35 34 30 25 24 23 28 26 27 22 9];
M_.block_structure.block(9).is_linear = true;
M_.block_structure.block(9).NNZDerivatives = 31;
M_.block_structure.block(9).bytecode_jacob_cols_to_sparse = [31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(2).g1_sparse_rowval = int32([13 13 5 6 13 21 13 13 17 18 20 1 6 8 10 13 19 21 13 13 1 15 20 2 3 16 3 10 12 16 4 11 21 5 6 11 6 7 11 18 21 22 8 9 18 10 11 22 11 13 6 12 13 21 13 14 15 1 7 15 15 16 9 17 12 17 18 10 12 15 19 15 19 20 13 21 2 22 11 11 22 9 14 22 14 22 14 22 9 14 22 9 9 9 14 22 9 4 11 22 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([4 5 6 6 6 6 7 8 9 9 9 10 10 10 10 10 10 10 11 12 23 23 23 24 24 24 25 25 25 25 26 26 26 27 28 28 29 29 29 29 29 29 30 31 31 32 32 32 33 33 34 34 34 34 35 36 36 37 37 37 38 38 39 39 40 40 40 41 41 41 41 42 42 42 43 43 44 44 55 56 56 57 57 57 58 58 59 59 60 60 60 61 62 63 63 63 64 65 65 66 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 2 3 7 8 9 12 19 20 21 21 21 21 21 21 21 21 21 21 21 24 27 31 34 35 37 43 44 46 49 51 55 56 58 61 63 65 68 72 75 77 79 79 79 79 79 79 79 79 79 79 79 80 82 85 87 89 92 93 94 97 98 100 101 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([]);
M_.block_structure.block(3).g1_sparse_colval = int32([]);
M_.block_structure.block(3).g1_sparse_colptr = int32([]);
M_.block_structure.block(4).g1_sparse_rowval = int32([]);
M_.block_structure.block(4).g1_sparse_colval = int32([]);
M_.block_structure.block(4).g1_sparse_colptr = int32([]);
M_.block_structure.block(5).g1_sparse_rowval = int32([]);
M_.block_structure.block(5).g1_sparse_colval = int32([]);
M_.block_structure.block(5).g1_sparse_colptr = int32([]);
M_.block_structure.block(6).g1_sparse_rowval = int32([]);
M_.block_structure.block(6).g1_sparse_colval = int32([]);
M_.block_structure.block(6).g1_sparse_colptr = int32([]);
M_.block_structure.block(7).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(7).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(7).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(8).g1_sparse_rowval = int32([]);
M_.block_structure.block(8).g1_sparse_colval = int32([]);
M_.block_structure.block(8).g1_sparse_colptr = int32([]);
M_.block_structure.block(9).g1_sparse_rowval = int32([]);
M_.block_structure.block(9).g1_sparse_colval = int32([]);
M_.block_structure.block(9).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 17 18 7 60 59 1 63 31 13 62 4 5 32 3 2 11 15 12 10 8 14 6 33 61 39 19 50 29 16 53 44 20 21 51 49 47 46 40 41 42 52 57 58 56 54 45 43 55 48 38 37 36 35 34 30 25 24 23 28 26 27 22 9];
M_.block_structure.equation_reordered = [ 22 20 7 35 34 2 63 6 9 62 15 19 4 21 5 8 10 13 14 16 17 18 1 36 50 11 51 33 12 53 45 24 23 52 49 48 47 54 55 56 57 58 59 60 61 46 44 43 42 41 40 39 38 37 32 31 30 29 28 27 26 25 3];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 1 5;
 1 31;
 3 5;
 3 31;
 5 1;
 5 3;
 5 5;
 5 13;
 5 31;
 5 32;
 5 62;
 5 63;
 6 5;
 6 31;
 7 5;
 14 4;
 16 4;
 17 5;
 18 4;
 19 5;
 22 17;
 25 13;
 25 21;
 29 13;
 29 14;
 30 3;
 30 13;
 31 8;
 31 13;
 32 5;
 38 10;
 39 13;
 39 16;
 40 18;
 42 13;
 42 21;
 62 5;
 63 31;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 1;
 1 3;
 1 13;
 1 33;
 2 1;
 3 3;
 3 9;
 3 32;
 3 33;
 4 1;
 4 5;
 4 13;
 4 31;
 4 32;
 5 2;
 5 3;
 5 32;
 5 33;
 6 3;
 6 13;
 6 31;
 7 7;
 7 15;
 7 17;
 8 11;
 9 13;
 9 15;
 10 6;
 10 7;
 10 11;
 10 12;
 10 14;
 10 15;
 11 14;
 11 19;
 12 8;
 12 14;
 12 16;
 12 18;
 12 19;
 12 59;
 12 60;
 13 12;
 13 59;
 13 60;
 14 8;
 14 10;
 15 4;
 15 10;
 16 4;
 16 8;
 16 13;
 17 6;
 17 14;
 17 17;
 18 6;
 18 7;
 19 5;
 19 18;
 20 14;
 20 18;
 20 59;
 21 3;
 21 8;
 21 14;
 21 59;
 22 17;
 23 13;
 23 21;
 24 20;
 25 16;
 25 20;
 25 21;
 25 22;
 26 20;
 26 27;
 27 3;
 27 14;
 27 26;
 28 6;
 28 7;
 28 28;
 29 14;
 29 23;
 30 3;
 30 24;
 31 8;
 31 25;
 32 3;
 32 30;
 33 5;
 33 13;
 33 29;
 34 59;
 34 60;
 35 60;
 35 61;
 36 5;
 36 13;
 36 61;
 37 33;
 37 34;
 38 10;
 38 35;
 39 16;
 39 36;
 40 18;
 40 37;
 41 5;
 41 38;
 42 16;
 42 21;
 42 48;
 43 13;
 43 20;
 43 21;
 43 55;
 44 43;
 45 44;
 46 44;
 46 45;
 47 44;
 47 46;
 48 16;
 48 21;
 48 47;
 49 3;
 49 29;
 49 49;
 50 13;
 50 39;
 51 39;
 51 50;
 52 20;
 52 50;
 52 51;
 53 53;
 54 29;
 54 40;
 55 3;
 55 41;
 56 14;
 56 42;
 57 41;
 57 52;
 58 13;
 58 20;
 58 21;
 58 57;
 59 20;
 59 58;
 60 31;
 60 56;
 61 54;
 61 60;
 62 62;
 63 63;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 2 33;
 4 3;
 4 32;
 4 33;
 8 2;
 8 11;
 8 12;
 8 14;
 8 15;
 15 2;
 15 6;
 15 8;
 15 10;
 15 12;
 15 14;
 23 2;
 23 16;
 23 21;
 24 2;
 33 2;
 33 3;
 33 11;
 33 12;
 33 14;
 33 15;
 33 29;
 36 2;
 36 3;
 36 11;
 36 12;
 36 14;
 36 15;
 36 61;
 43 16;
 43 21;
 44 2;
 45 2;
 46 2;
 47 2;
 50 2;
 50 39;
 51 39;
 53 29;
 58 16;
 58 21;
];
M_.block_structure.dyn_tmp_nbr = 45;
M_.state_var = [17 18 1 63 31 13 62 4 5 32 3 10 8 14 16 21 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(63, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(1, 1);
M_.params = NaN(44, 1);
M_.endo_trends = struct('deflator', cell(63, 1), 'log_deflator', cell(63, 1), 'growth_factor', cell(63, 1), 'log_growth_factor', cell(63, 1));
M_.NNZDerivatives = [241; 507; 576; ];
M_.dynamic_g1_sparse_rowval = int32([5 5 30 14 16 18 1 3 5 6 7 17 19 32 62 31 38 5 25 29 30 31 39 42 29 39 22 40 25 42 1 3 5 6 63 5 5 5 1 2 4 5 1 3 5 6 21 27 30 32 49 55 15 16 4 19 33 36 41 10 17 18 28 7 10 18 28 12 14 16 21 31 3 14 15 38 8 10 10 13 1 4 6 9 16 23 33 36 43 50 58 10 11 12 17 20 21 27 29 56 7 9 10 12 25 39 42 48 7 17 22 12 19 20 40 11 12 24 25 26 43 52 58 59 23 25 42 43 48 58 25 29 30 31 27 26 28 33 49 54 32 4 6 60 3 4 5 1 3 5 37 37 38 39 40 41 50 51 54 55 57 56 44 45 46 47 46 47 48 42 49 51 52 52 57 53 61 43 60 58 59 12 13 20 21 34 12 13 34 35 61 35 36 62 63 8 15 23 24 33 36 44 45 46 47 50 4 33 36 15 15 15 8 33 36 8 15 33 36 8 15 33 36 8 33 36 23 43 58 23 43 58 33 53 4 2 4 50 51 36 22 ]);
M_.dynamic_g1_sparse_colval = int32([1 3 3 4 4 4 5 5 5 5 5 5 5 5 5 8 10 13 13 13 13 13 13 13 14 16 17 18 21 21 31 31 31 31 31 32 62 63 64 64 64 65 66 66 66 66 66 66 66 66 66 66 67 67 68 68 68 68 68 69 69 69 69 70 70 70 70 71 71 71 71 71 72 73 73 73 74 74 75 75 76 76 76 76 76 76 76 76 76 76 76 77 77 77 77 77 77 77 77 77 78 78 78 79 79 79 79 79 80 80 80 81 81 81 81 82 82 83 83 83 83 83 83 83 84 84 84 84 84 84 85 86 87 88 89 90 91 92 92 92 93 94 94 94 95 95 95 96 96 96 96 97 98 99 100 101 102 102 103 104 104 105 106 107 107 107 108 109 110 111 112 113 113 114 115 116 117 118 119 120 121 122 122 122 122 122 123 123 123 123 123 124 124 125 126 128 128 128 128 128 128 128 128 128 128 128 129 129 129 132 134 136 137 137 137 138 138 138 138 140 140 140 140 141 141 141 142 142 142 147 147 147 155 155 158 159 159 165 165 187 190 ]);
M_.dynamic_g1_sparse_colptr = int32([1 2 2 4 7 16 16 16 17 17 18 18 18 25 26 26 27 28 29 29 29 31 31 31 31 31 31 31 31 31 31 36 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 38 39 42 43 53 55 60 64 68 73 74 77 79 81 92 101 104 109 112 116 118 125 131 132 133 134 135 136 137 138 141 142 145 148 152 153 154 155 156 157 159 160 162 163 164 167 168 169 170 171 172 174 175 176 177 178 179 180 181 182 187 192 194 195 196 196 207 210 210 210 211 211 212 212 213 216 220 220 224 227 230 230 230 230 230 233 233 233 233 233 233 233 233 235 235 235 236 238 238 238 238 238 238 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 240 241 241 241 242 ]);
M_.dynamic_g2_sparse_indices = int32([1 64 64 ;
1 64 66 ;
1 64 5 ;
1 64 76 ;
1 64 31 ;
1 66 66 ;
1 66 5 ;
1 66 76 ;
1 66 31 ;
1 5 5 ;
1 5 76 ;
1 5 31 ;
1 76 76 ;
1 76 31 ;
1 31 31 ;
2 159 159 ;
3 66 66 ;
3 66 5 ;
3 66 31 ;
3 66 96 ;
3 5 5 ;
3 5 31 ;
3 5 95 ;
3 5 96 ;
3 31 31 ;
3 31 96 ;
3 95 96 ;
3 96 96 ;
4 64 64 ;
4 64 129 ;
4 64 68 ;
4 64 76 ;
4 64 94 ;
4 64 158 ;
4 64 159 ;
4 129 129 ;
4 129 68 ;
4 129 76 ;
4 129 94 ;
4 129 159 ;
4 68 68 ;
4 68 76 ;
4 68 94 ;
4 68 159 ;
4 76 76 ;
4 76 94 ;
4 76 158 ;
4 76 159 ;
4 94 94 ;
4 94 159 ;
4 158 159 ;
4 159 159 ;
5 1 1 ;
5 1 3 ;
5 1 66 ;
5 1 5 ;
5 1 13 ;
5 1 31 ;
5 1 32 ;
5 1 95 ;
5 1 96 ;
5 1 62 ;
5 1 63 ;
5 3 3 ;
5 3 66 ;
5 3 5 ;
5 3 13 ;
5 3 31 ;
5 3 32 ;
5 3 95 ;
5 3 96 ;
5 3 62 ;
5 3 63 ;
5 66 66 ;
5 66 5 ;
5 66 13 ;
5 66 31 ;
5 66 32 ;
5 66 96 ;
5 66 62 ;
5 66 63 ;
5 5 5 ;
5 5 13 ;
5 5 31 ;
5 5 32 ;
5 5 95 ;
5 5 96 ;
5 5 62 ;
5 5 63 ;
5 13 13 ;
5 13 31 ;
5 13 32 ;
5 13 95 ;
5 13 96 ;
5 13 62 ;
5 13 63 ;
5 31 31 ;
5 31 32 ;
5 31 96 ;
5 31 62 ;
5 31 63 ;
5 32 32 ;
5 32 95 ;
5 32 96 ;
5 32 62 ;
5 32 63 ;
5 95 96 ;
5 95 62 ;
5 95 63 ;
5 96 96 ;
5 96 62 ;
5 96 63 ;
5 62 62 ;
5 62 63 ;
5 63 63 ;
6 66 5 ;
6 5 5 ;
6 76 94 ;
7 5 5 ;
7 5 70 ;
7 5 80 ;
7 70 70 ;
7 70 80 ;
8 128 137 ;
8 128 138 ;
8 128 140 ;
8 128 141 ;
8 137 141 ;
8 138 140 ;
10 69 69 ;
10 69 75 ;
10 69 77 ;
10 70 70 ;
10 70 74 ;
10 70 78 ;
10 74 78 ;
10 75 77 ;
12 77 122 ;
12 81 123 ;
12 122 122 ;
13 122 122 ;
13 122 123 ;
14 4 4 ;
14 4 71 ;
14 4 73 ;
14 71 71 ;
14 71 73 ;
15 128 67 ;
15 128 132 ;
15 128 134 ;
15 128 136 ;
15 128 138 ;
15 128 140 ;
15 67 67 ;
15 67 134 ;
15 67 136 ;
15 132 132 ;
15 132 138 ;
15 132 140 ;
15 134 134 ;
15 134 136 ;
15 138 140 ;
16 4 4 ;
16 4 71 ;
16 67 76 ;
16 71 71 ;
17 5 5 ;
17 5 69 ;
17 5 80 ;
17 69 69 ;
17 69 80 ;
20 77 122 ;
21 77 122 ;
21 122 122 ;
22 17 17 ;
22 80 80 ;
23 128 76 ;
23 128 142 ;
23 128 147 ;
23 76 142 ;
23 76 147 ;
24 83 83 ;
25 13 79 ;
25 13 21 ;
25 13 84 ;
25 79 21 ;
25 21 21 ;
25 21 84 ;
27 66 77 ;
27 77 77 ;
28 69 69 ;
28 69 70 ;
29 13 13 ;
29 14 14 ;
29 77 77 ;
30 3 3 ;
30 66 66 ;
30 13 13 ;
31 8 8 ;
31 71 71 ;
31 13 13 ;
32 66 5 ;
32 5 5 ;
33 128 129 ;
33 128 68 ;
33 128 137 ;
33 128 138 ;
33 128 76 ;
33 128 140 ;
33 128 141 ;
33 128 155 ;
33 129 68 ;
33 129 76 ;
33 68 68 ;
33 68 76 ;
33 137 76 ;
33 137 141 ;
33 138 76 ;
33 138 140 ;
33 76 140 ;
33 76 141 ;
33 76 155 ;
34 122 122 ;
36 128 129 ;
36 128 68 ;
36 128 137 ;
36 128 138 ;
36 128 76 ;
36 128 140 ;
36 128 141 ;
36 128 187 ;
36 129 68 ;
36 129 76 ;
36 68 68 ;
36 68 76 ;
36 137 76 ;
36 137 141 ;
36 138 76 ;
36 138 140 ;
36 76 140 ;
36 76 141 ;
36 76 187 ;
38 10 10 ;
38 73 73 ;
39 13 13 ;
39 16 16 ;
39 79 79 ;
40 18 18 ;
40 81 81 ;
42 13 79 ;
42 13 21 ;
42 13 84 ;
42 79 21 ;
42 21 21 ;
42 21 84 ;
43 76 142 ;
43 76 84 ;
43 76 147 ;
43 142 84 ;
43 84 84 ;
43 84 147 ;
46 128 128 ;
46 128 107 ;
46 107 107 ;
47 128 128 ;
47 128 107 ;
47 107 107 ;
48 79 79 ;
48 79 84 ;
48 84 84 ;
49 66 66 ;
49 66 92 ;
50 128 76 ;
50 128 165 ;
50 76 76 ;
50 76 165 ;
51 102 102 ;
51 102 165 ;
54 92 92 ;
55 66 66 ;
56 77 77 ;
58 76 76 ;
58 76 142 ;
58 76 83 ;
58 76 84 ;
58 76 147 ;
58 142 142 ;
58 142 83 ;
58 142 84 ;
58 142 147 ;
58 83 83 ;
58 83 84 ;
58 83 147 ;
58 84 84 ;
58 84 147 ;
58 147 147 ;
59 83 83 ;
60 94 94 ;
61 123 123 ;
]);
M_.dynamic_g3_sparse_indices = int32([1 64 64 64 ;
1 64 64 66 ;
1 64 64 5 ;
1 64 64 76 ;
1 64 64 31 ;
1 64 66 66 ;
1 64 66 5 ;
1 64 66 76 ;
1 64 66 31 ;
1 64 5 5 ;
1 64 5 76 ;
1 64 5 31 ;
1 64 76 76 ;
1 64 76 31 ;
1 64 31 31 ;
1 66 66 66 ;
1 66 66 5 ;
1 66 66 76 ;
1 66 66 31 ;
1 66 5 5 ;
1 66 5 76 ;
1 66 5 31 ;
1 66 76 76 ;
1 66 76 31 ;
1 66 31 31 ;
1 5 5 5 ;
1 5 5 76 ;
1 5 5 31 ;
1 5 76 76 ;
1 5 76 31 ;
1 5 31 31 ;
1 76 76 76 ;
1 76 76 31 ;
1 76 31 31 ;
1 31 31 31 ;
2 159 159 159 ;
3 66 66 66 ;
3 66 66 5 ;
3 66 66 31 ;
3 66 66 96 ;
3 66 5 5 ;
3 66 5 31 ;
3 66 5 96 ;
3 66 31 31 ;
3 66 31 96 ;
3 66 96 96 ;
3 5 5 5 ;
3 5 5 31 ;
3 5 5 95 ;
3 5 5 96 ;
3 5 31 31 ;
3 5 31 96 ;
3 5 95 96 ;
3 5 96 96 ;
3 31 31 31 ;
3 31 31 96 ;
3 31 96 96 ;
3 95 96 96 ;
3 96 96 96 ;
4 64 64 64 ;
4 64 64 129 ;
4 64 64 68 ;
4 64 64 76 ;
4 64 64 94 ;
4 64 64 158 ;
4 64 64 159 ;
4 64 129 129 ;
4 64 129 68 ;
4 64 129 76 ;
4 64 129 94 ;
4 64 129 159 ;
4 64 68 68 ;
4 64 68 76 ;
4 64 68 94 ;
4 64 68 159 ;
4 64 76 76 ;
4 64 76 94 ;
4 64 76 158 ;
4 64 76 159 ;
4 64 94 94 ;
4 64 94 159 ;
4 64 158 159 ;
4 64 159 159 ;
4 129 129 129 ;
4 129 129 68 ;
4 129 129 76 ;
4 129 129 94 ;
4 129 129 159 ;
4 129 68 68 ;
4 129 68 76 ;
4 129 68 94 ;
4 129 68 159 ;
4 129 76 76 ;
4 129 76 94 ;
4 129 76 159 ;
4 129 94 94 ;
4 129 94 159 ;
4 129 159 159 ;
4 68 68 68 ;
4 68 68 76 ;
4 68 68 94 ;
4 68 68 159 ;
4 68 76 76 ;
4 68 76 94 ;
4 68 76 159 ;
4 68 94 94 ;
4 68 94 159 ;
4 68 159 159 ;
4 76 76 76 ;
4 76 76 94 ;
4 76 76 158 ;
4 76 76 159 ;
4 76 94 94 ;
4 76 94 159 ;
4 76 158 159 ;
4 76 159 159 ;
4 94 94 94 ;
4 94 94 159 ;
4 94 159 159 ;
4 158 159 159 ;
4 159 159 159 ;
5 1 1 1 ;
5 1 1 3 ;
5 1 1 66 ;
5 1 1 5 ;
5 1 1 13 ;
5 1 1 31 ;
5 1 1 32 ;
5 1 1 95 ;
5 1 1 96 ;
5 1 1 62 ;
5 1 1 63 ;
5 1 3 3 ;
5 1 3 66 ;
5 1 3 5 ;
5 1 3 13 ;
5 1 3 31 ;
5 1 3 32 ;
5 1 3 95 ;
5 1 3 96 ;
5 1 3 62 ;
5 1 3 63 ;
5 1 66 66 ;
5 1 66 5 ;
5 1 66 13 ;
5 1 66 31 ;
5 1 66 32 ;
5 1 66 96 ;
5 1 66 62 ;
5 1 66 63 ;
5 1 5 5 ;
5 1 5 13 ;
5 1 5 31 ;
5 1 5 32 ;
5 1 5 95 ;
5 1 5 96 ;
5 1 5 62 ;
5 1 5 63 ;
5 1 13 13 ;
5 1 13 31 ;
5 1 13 32 ;
5 1 13 95 ;
5 1 13 96 ;
5 1 13 62 ;
5 1 13 63 ;
5 1 31 31 ;
5 1 31 32 ;
5 1 31 96 ;
5 1 31 62 ;
5 1 31 63 ;
5 1 32 32 ;
5 1 32 95 ;
5 1 32 96 ;
5 1 32 62 ;
5 1 32 63 ;
5 1 95 96 ;
5 1 95 62 ;
5 1 95 63 ;
5 1 96 96 ;
5 1 96 62 ;
5 1 96 63 ;
5 1 62 62 ;
5 1 62 63 ;
5 1 63 63 ;
5 3 3 3 ;
5 3 3 66 ;
5 3 3 5 ;
5 3 3 13 ;
5 3 3 31 ;
5 3 3 32 ;
5 3 3 95 ;
5 3 3 96 ;
5 3 3 62 ;
5 3 3 63 ;
5 3 66 66 ;
5 3 66 5 ;
5 3 66 13 ;
5 3 66 31 ;
5 3 66 32 ;
5 3 66 96 ;
5 3 66 62 ;
5 3 66 63 ;
5 3 5 5 ;
5 3 5 13 ;
5 3 5 31 ;
5 3 5 32 ;
5 3 5 95 ;
5 3 5 96 ;
5 3 5 62 ;
5 3 5 63 ;
5 3 13 13 ;
5 3 13 31 ;
5 3 13 32 ;
5 3 13 95 ;
5 3 13 96 ;
5 3 13 62 ;
5 3 13 63 ;
5 3 31 31 ;
5 3 31 32 ;
5 3 31 96 ;
5 3 31 62 ;
5 3 31 63 ;
5 3 32 32 ;
5 3 32 95 ;
5 3 32 96 ;
5 3 32 62 ;
5 3 32 63 ;
5 3 95 96 ;
5 3 95 62 ;
5 3 95 63 ;
5 3 96 96 ;
5 3 96 62 ;
5 3 96 63 ;
5 3 62 62 ;
5 3 62 63 ;
5 3 63 63 ;
5 66 66 66 ;
5 66 66 5 ;
5 66 66 13 ;
5 66 66 31 ;
5 66 66 32 ;
5 66 66 96 ;
5 66 66 62 ;
5 66 66 63 ;
5 66 5 5 ;
5 66 5 13 ;
5 66 5 31 ;
5 66 5 32 ;
5 66 5 96 ;
5 66 5 62 ;
5 66 5 63 ;
5 66 13 13 ;
5 66 13 31 ;
5 66 13 32 ;
5 66 13 96 ;
5 66 13 62 ;
5 66 13 63 ;
5 66 31 31 ;
5 66 31 32 ;
5 66 31 96 ;
5 66 31 62 ;
5 66 31 63 ;
5 66 32 32 ;
5 66 32 96 ;
5 66 32 62 ;
5 66 32 63 ;
5 66 96 96 ;
5 66 96 62 ;
5 66 96 63 ;
5 66 62 62 ;
5 66 62 63 ;
5 66 63 63 ;
5 5 5 5 ;
5 5 5 13 ;
5 5 5 31 ;
5 5 5 32 ;
5 5 5 95 ;
5 5 5 96 ;
5 5 5 62 ;
5 5 5 63 ;
5 5 13 13 ;
5 5 13 31 ;
5 5 13 32 ;
5 5 13 95 ;
5 5 13 96 ;
5 5 13 62 ;
5 5 13 63 ;
5 5 31 31 ;
5 5 31 32 ;
5 5 31 96 ;
5 5 31 62 ;
5 5 31 63 ;
5 5 32 32 ;
5 5 32 95 ;
5 5 32 96 ;
5 5 32 62 ;
5 5 32 63 ;
5 5 95 96 ;
5 5 95 62 ;
5 5 95 63 ;
5 5 96 96 ;
5 5 96 62 ;
5 5 96 63 ;
5 5 62 62 ;
5 5 62 63 ;
5 5 63 63 ;
5 13 13 13 ;
5 13 13 31 ;
5 13 13 32 ;
5 13 13 95 ;
5 13 13 96 ;
5 13 13 62 ;
5 13 13 63 ;
5 13 31 31 ;
5 13 31 32 ;
5 13 31 96 ;
5 13 31 62 ;
5 13 31 63 ;
5 13 32 32 ;
5 13 32 95 ;
5 13 32 96 ;
5 13 32 62 ;
5 13 32 63 ;
5 13 95 96 ;
5 13 95 62 ;
5 13 95 63 ;
5 13 96 96 ;
5 13 96 62 ;
5 13 96 63 ;
5 13 62 62 ;
5 13 62 63 ;
5 13 63 63 ;
5 31 31 31 ;
5 31 31 32 ;
5 31 31 96 ;
5 31 31 62 ;
5 31 31 63 ;
5 31 32 32 ;
5 31 32 96 ;
5 31 32 62 ;
5 31 32 63 ;
5 31 96 96 ;
5 31 96 62 ;
5 31 96 63 ;
5 31 62 62 ;
5 31 62 63 ;
5 31 63 63 ;
5 32 32 32 ;
5 32 32 95 ;
5 32 32 96 ;
5 32 32 62 ;
5 32 32 63 ;
5 32 95 96 ;
5 32 95 62 ;
5 32 95 63 ;
5 32 96 96 ;
5 32 96 62 ;
5 32 96 63 ;
5 32 62 62 ;
5 32 62 63 ;
5 32 63 63 ;
5 95 96 96 ;
5 95 96 62 ;
5 95 96 63 ;
5 95 62 62 ;
5 95 62 63 ;
5 95 63 63 ;
5 96 96 96 ;
5 96 96 62 ;
5 96 96 63 ;
5 96 62 62 ;
5 96 62 63 ;
5 96 63 63 ;
5 62 62 62 ;
5 62 62 63 ;
5 62 63 63 ;
5 63 63 63 ;
6 66 5 5 ;
6 5 5 5 ;
7 5 5 5 ;
7 5 5 70 ;
7 5 5 80 ;
7 5 70 70 ;
7 5 70 80 ;
7 70 70 70 ;
7 70 70 80 ;
8 128 137 141 ;
8 128 138 140 ;
10 69 69 69 ;
10 69 69 75 ;
10 69 69 77 ;
10 69 75 77 ;
10 70 70 70 ;
10 70 70 74 ;
10 70 70 78 ;
10 70 74 78 ;
12 77 122 122 ;
12 122 122 122 ;
13 122 122 122 ;
14 4 4 4 ;
14 4 4 71 ;
14 4 4 73 ;
14 4 71 71 ;
14 4 71 73 ;
14 71 71 71 ;
14 71 71 73 ;
15 128 67 67 ;
15 128 67 134 ;
15 128 67 136 ;
15 128 132 132 ;
15 128 132 138 ;
15 128 132 140 ;
15 128 134 134 ;
15 128 134 136 ;
15 128 138 140 ;
15 67 67 67 ;
15 67 67 134 ;
15 67 67 136 ;
15 67 134 134 ;
15 67 134 136 ;
15 132 132 132 ;
15 132 132 138 ;
15 132 132 140 ;
15 132 138 140 ;
15 134 134 134 ;
15 134 134 136 ;
16 4 4 4 ;
16 4 4 71 ;
16 4 71 71 ;
16 71 71 71 ;
17 5 5 5 ;
17 5 5 69 ;
17 5 5 80 ;
17 5 69 69 ;
17 5 69 80 ;
17 69 69 69 ;
17 69 69 80 ;
21 77 122 122 ;
21 122 122 122 ;
22 17 17 17 ;
22 80 80 80 ;
23 128 76 142 ;
23 128 76 147 ;
24 83 83 83 ;
25 13 79 21 ;
25 13 21 21 ;
25 13 21 84 ;
25 79 21 21 ;
25 21 21 21 ;
25 21 21 84 ;
27 66 77 77 ;
27 77 77 77 ;
28 69 69 69 ;
28 69 69 70 ;
29 13 13 13 ;
29 14 14 14 ;
29 77 77 77 ;
30 3 3 3 ;
30 66 66 66 ;
30 13 13 13 ;
31 8 8 8 ;
31 71 71 71 ;
31 13 13 13 ;
32 66 5 5 ;
32 5 5 5 ;
33 128 129 68 ;
33 128 129 76 ;
33 128 68 68 ;
33 128 68 76 ;
33 128 137 76 ;
33 128 137 141 ;
33 128 138 76 ;
33 128 138 140 ;
33 128 76 140 ;
33 128 76 141 ;
33 128 76 155 ;
33 129 68 68 ;
33 129 68 76 ;
33 68 68 68 ;
33 68 68 76 ;
33 137 76 141 ;
33 138 76 140 ;
34 122 122 122 ;
36 128 129 68 ;
36 128 129 76 ;
36 128 68 68 ;
36 128 68 76 ;
36 128 137 76 ;
36 128 137 141 ;
36 128 138 76 ;
36 128 138 140 ;
36 128 76 140 ;
36 128 76 141 ;
36 128 76 187 ;
36 129 68 68 ;
36 129 68 76 ;
36 68 68 68 ;
36 68 68 76 ;
36 137 76 141 ;
36 138 76 140 ;
38 10 10 10 ;
38 73 73 73 ;
39 13 13 13 ;
39 16 16 16 ;
39 79 79 79 ;
40 18 18 18 ;
40 81 81 81 ;
42 13 79 21 ;
42 13 21 21 ;
42 13 21 84 ;
42 79 21 21 ;
42 21 21 21 ;
42 21 21 84 ;
43 76 142 84 ;
43 76 84 84 ;
43 76 84 147 ;
43 142 84 84 ;
43 84 84 84 ;
43 84 84 147 ;
47 128 128 128 ;
47 128 128 107 ;
47 128 107 107 ;
47 107 107 107 ;
48 79 79 79 ;
48 79 79 84 ;
48 79 84 84 ;
48 84 84 84 ;
49 66 66 66 ;
49 66 66 92 ;
50 128 76 76 ;
50 128 76 165 ;
50 76 76 76 ;
50 76 76 165 ;
51 102 102 102 ;
51 102 102 165 ;
54 92 92 92 ;
55 66 66 66 ;
56 77 77 77 ;
58 76 76 76 ;
58 76 76 142 ;
58 76 76 83 ;
58 76 76 84 ;
58 76 76 147 ;
58 76 142 142 ;
58 76 142 83 ;
58 76 142 84 ;
58 76 142 147 ;
58 76 83 83 ;
58 76 83 84 ;
58 76 83 147 ;
58 76 84 84 ;
58 76 84 147 ;
58 76 147 147 ;
58 142 142 142 ;
58 142 142 83 ;
58 142 142 84 ;
58 142 142 147 ;
58 142 83 83 ;
58 142 83 84 ;
58 142 83 147 ;
58 142 84 84 ;
58 142 84 147 ;
58 142 147 147 ;
58 83 83 83 ;
58 83 83 84 ;
58 83 83 147 ;
58 83 84 84 ;
58 83 84 147 ;
58 83 147 147 ;
58 84 84 84 ;
58 84 84 147 ;
58 84 147 147 ;
58 147 147 147 ;
59 83 83 83 ;
60 94 94 94 ;
61 123 123 123 ;
]);
M_.lhs = {
'u*scale_u'; 
'scale_ce*ce'; 
'lambda'; 
'multH'; 
'sdf'; 
'gamma*z'; 
'iH'; 
'phi'; 
'gamma'; 
'alpha*varrho*y/kY'; 
'w'; 
'd'; 
'varrho'; 
'1'; 
'q'; 
'gamma*kT'; 
'y'; 
'kT(-1)'; 
'xfactor*x'; 
'e'; 
'y*(1-eta1*mu^eta2)'; 
'log(aY)'; 
'pE'; 
'1/(1+rF)'; 
'realEPquat'; 
'rFquat'; 
'cyrat'; 
'kHkYrat'; 
'gy'; 
'gc'; 
'giT'; 
'c_x'; 
'SCC'; 
'vE*iotaE'; 
'iotaX*vX'; 
'vX'; 
'U'; 
'gq'; 
'gd'; 
'gE'; 
'X'; 
'asset_return'; 
'EPquat'; 
'Esdf'; 
'muSDF'; 
'varSDF'; 
'skewSDF'; 
'ln_pd'; 
'EC1'; 
'pB'; 
'EretB'; 
'bpann'; 
'ESCC'; 
'ln_SCC'; 
'ln_c'; 
'ln_y'; 
'ln_c100'; 
'ln_EP'; 
'ln_rF'; 
'ln_z'; 
'vE_irfs'; 
'AUX_ENDO_LAG_4_1'; 
'AUX_ENDO_LAG_30_1'; 
};
M_.static_tmp_nbr = [37; 16; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 22];
M_.block_structure_stat.block(1).variable = [ 17];
M_.block_structure_stat.block(2).Simulation_Type = 1;
M_.block_structure_stat.block(2).endo_nbr = 2;
M_.block_structure_stat.block(2).mfs = 2;
M_.block_structure_stat.block(2).equation = [ 38 40];
M_.block_structure_stat.block(2).variable = [ 35 37];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 23;
M_.block_structure_stat.block(3).mfs = 23;
M_.block_structure_stat.block(3).equation = [ 4 5 6 7 8 9 10 35 2 13 14 15 16 17 18 19 20 21 1 34 36 63 62];
M_.block_structure_stat.block(3).variable = [ 32 63 5 7 2 13 15 61 1 12 10 14 8 6 4 18 59 3 33 60 11 31 62];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 50];
M_.block_structure_stat.block(4).variable = [ 39];
M_.block_structure_stat.block(5).Simulation_Type = 1;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 11];
M_.block_structure_stat.block(5).variable = [ 19];
M_.block_structure_stat.block(6).Simulation_Type = 3;
M_.block_structure_stat.block(6).endo_nbr = 1;
M_.block_structure_stat.block(6).mfs = 1;
M_.block_structure_stat.block(6).equation = [ 33];
M_.block_structure_stat.block(6).variable = [ 29];
M_.block_structure_stat.block(7).Simulation_Type = 1;
M_.block_structure_stat.block(7).endo_nbr = 3;
M_.block_structure_stat.block(7).mfs = 3;
M_.block_structure_stat.block(7).equation = [ 12 51 53];
M_.block_structure_stat.block(7).variable = [ 16 50 53];
M_.block_structure_stat.block(8).Simulation_Type = 3;
M_.block_structure_stat.block(8).endo_nbr = 1;
M_.block_structure_stat.block(8).mfs = 1;
M_.block_structure_stat.block(8).equation = [ 24];
M_.block_structure_stat.block(8).variable = [ 20];
M_.block_structure_stat.block(9).Simulation_Type = 3;
M_.block_structure_stat.block(9).endo_nbr = 1;
M_.block_structure_stat.block(9).mfs = 1;
M_.block_structure_stat.block(9).equation = [ 23];
M_.block_structure_stat.block(9).variable = [ 21];
M_.block_structure_stat.block(10).Simulation_Type = 1;
M_.block_structure_stat.block(10).endo_nbr = 29;
M_.block_structure_stat.block(10).mfs = 29;
M_.block_structure_stat.block(10).equation = [ 52 49 45 48 54 55 56 57 58 59 60 61 47 46 44 43 42 41 3 39 37 32 31 30 29 28 27 26 25];
M_.block_structure_stat.block(10).variable = [ 51 49 44 47 40 41 42 52 57 58 56 54 46 45 43 55 48 38 9 36 34 30 25 24 23 28 26 27 22];
M_.block_structure_stat.variable_reordered = [ 17 35 37 32 63 5 7 2 13 15 61 1 12 10 14 8 6 4 18 59 3 33 60 11 31 62 39 19 29 16 50 53 20 21 51 49 44 47 40 41 42 52 57 58 56 54 46 45 43 55 48 38 9 36 34 30 25 24 23 28 26 27 22];
M_.block_structure_stat.equation_reordered = [ 22 38 40 4 5 6 7 8 9 10 35 2 13 14 15 16 17 18 19 20 21 1 34 36 63 62 50 11 33 12 51 53 24 23 52 49 45 48 54 55 56 57 58 59 60 61 47 46 44 43 42 41 3 39 37 32 31 30 29 28 27 26 25];
M_.block_structure_stat.incidence.sparse_IM = [
 1 1;
 1 3;
 1 5;
 1 13;
 1 31;
 1 33;
 2 1;
 2 33;
 3 3;
 3 5;
 3 9;
 3 31;
 3 32;
 3 33;
 4 1;
 4 3;
 4 5;
 4 13;
 4 31;
 4 32;
 4 33;
 5 1;
 5 2;
 5 3;
 5 5;
 5 13;
 5 31;
 5 32;
 5 33;
 5 62;
 5 63;
 6 3;
 6 5;
 6 13;
 6 31;
 7 5;
 7 7;
 7 15;
 7 17;
 8 2;
 8 11;
 8 12;
 8 14;
 8 15;
 9 13;
 9 15;
 10 6;
 10 7;
 10 11;
 10 12;
 10 14;
 10 15;
 11 14;
 11 19;
 12 8;
 12 14;
 12 16;
 12 18;
 12 19;
 12 59;
 12 60;
 13 12;
 13 59;
 13 60;
 14 4;
 14 8;
 14 10;
 15 2;
 15 4;
 15 6;
 15 8;
 15 10;
 15 12;
 15 14;
 16 4;
 16 8;
 16 13;
 17 5;
 17 6;
 17 14;
 17 17;
 18 4;
 18 6;
 18 7;
 19 5;
 19 18;
 20 14;
 20 18;
 20 59;
 21 3;
 21 8;
 21 14;
 21 59;
 22 17;
 23 2;
 23 13;
 23 16;
 23 21;
 24 2;
 24 20;
 25 13;
 25 16;
 25 20;
 25 21;
 25 22;
 26 20;
 26 27;
 27 3;
 27 14;
 27 26;
 28 6;
 28 7;
 28 28;
 29 13;
 29 23;
 30 13;
 30 24;
 31 13;
 31 25;
 32 3;
 32 5;
 32 30;
 33 2;
 33 3;
 33 5;
 33 11;
 33 12;
 33 13;
 33 14;
 33 15;
 33 29;
 34 59;
 34 60;
 35 60;
 35 61;
 36 2;
 36 3;
 36 5;
 36 11;
 36 12;
 36 13;
 36 14;
 36 15;
 36 61;
 37 33;
 37 34;
 38 35;
 39 13;
 39 36;
 40 37;
 41 5;
 41 38;
 42 13;
 42 16;
 42 21;
 42 48;
 43 13;
 43 16;
 43 20;
 43 21;
 43 55;
 44 2;
 44 43;
 45 2;
 45 44;
 46 2;
 46 44;
 46 45;
 47 2;
 47 44;
 47 46;
 48 16;
 48 21;
 48 47;
 49 3;
 49 29;
 49 49;
 50 2;
 50 13;
 50 39;
 51 39;
 51 50;
 52 20;
 52 50;
 52 51;
 53 29;
 53 53;
 54 29;
 54 40;
 55 3;
 55 41;
 56 14;
 56 42;
 57 41;
 57 52;
 58 13;
 58 16;
 58 20;
 58 21;
 58 57;
 59 20;
 59 58;
 60 31;
 60 56;
 61 54;
 61 60;
 62 5;
 62 62;
 63 31;
 63 63;
];
M_.block_structure_stat.tmp_nbr = 44;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 2 2 22 1 2 3 4 14 16 19 21 23 4 7 15 2 5 12 21 1 2 3 6 13 19 21 4 5 6 7 21 8 21 1 2 9 19 5 7 10 12 21 11 12 5 7 12 14 17 18 21 11 12 13 18 7 12 14 15 11 12 13 15 16 17 10 17 18 20 1 2 3 18 19 21 1 2 9 19 8 10 20 5 7 21 1 2 3 19 22 2 23 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 1 2 2 3 3 3 3 3 3 3 3 3 4 4 4 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 8 8 9 9 9 9 10 10 10 10 10 11 11 12 12 12 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 17 17 17 17 18 18 18 18 18 18 19 19 19 19 20 20 20 21 21 21 22 22 22 22 22 23 23 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 3 5 14 17 21 28 33 35 39 44 46 53 57 61 65 67 71 77 81 84 87 92 94 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(7).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(7).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(7).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(8).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(8).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(8).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(9).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(9).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(9).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(10).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(10).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(10).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([1 2 4 5 5 8 15 23 24 33 36 44 45 46 47 50 1 3 4 5 6 21 27 32 33 36 49 55 14 15 16 18 1 3 4 5 6 7 17 19 32 33 36 41 62 10 15 17 18 28 7 10 18 28 12 14 15 16 21 3 14 15 8 10 33 36 8 10 13 15 33 36 1 4 5 6 9 16 23 25 29 30 31 33 36 39 42 43 50 58 8 10 11 12 15 17 20 21 27 33 36 56 7 8 9 10 33 36 12 23 25 42 43 48 58 7 17 22 12 19 20 11 12 24 25 26 43 52 58 59 23 25 42 43 48 58 25 29 30 31 27 26 28 33 49 53 54 32 1 3 4 5 6 60 63 3 4 5 1 2 3 4 5 37 37 38 39 40 41 50 51 54 55 57 56 44 45 46 47 46 47 48 42 49 51 52 52 57 53 61 43 60 58 59 12 13 20 21 34 12 13 34 35 61 35 36 5 62 5 63 ]);
M_.static_g1_sparse_colval = int32([1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 7 7 7 7 8 8 8 8 8 9 10 10 11 11 11 11 12 12 12 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 15 15 15 15 15 15 16 16 16 16 16 16 16 17 17 17 18 18 18 19 19 20 20 20 20 20 20 20 21 21 21 21 21 21 22 23 24 25 26 27 28 29 29 29 29 30 31 31 31 31 31 31 31 32 32 32 33 33 33 33 33 33 34 35 36 37 38 39 39 40 41 41 42 43 44 44 44 45 46 47 48 49 50 50 51 52 53 54 55 56 57 58 59 59 59 59 59 60 60 60 60 60 61 61 62 62 63 63 ]);
M_.static_g1_sparse_colptr = int32([1 5 17 29 33 46 51 55 60 61 63 67 73 91 103 109 116 119 122 124 131 137 138 139 140 141 142 143 144 148 149 156 159 165 166 167 168 169 170 172 173 175 176 177 180 181 182 183 184 185 187 188 189 190 191 192 193 194 195 200 205 207 209 211 ]);
addpath('../core_files')
M_.params(35) = 1;
eD = M_.params(35);
M_.params(36) = 1;
eC = M_.params(36);
M_.params(37) = 1;
eE = M_.params(37);
M_.params(38) = 1;
eG = M_.params(38);
M_.params(39) = 1;
aD = M_.params(39);
M_.params(40) = 1;
aC = M_.params(40);
M_.params(41) = 1;
aE = M_.params(41);
M_.params(42) = 1;
aG = M_.params(42);
M_.params(30) = 0.0123;
std_y = M_.params(30);
M_.params(16) = .0060;
gamma_sts = M_.params(16);
M_.params(18) = 0.9859;
rhoY = M_.params(18);
M_.params(13) = 4.09595;
eps = M_.params(13);
M_.params(12) = 0.94081;
mhab = M_.params(12);
M_.params(17) = 5.98712;
sigma = M_.params(17);
M_.params(11) = 0.68716;
thetaEZ = M_.params(11);
M_.params(19) = 0.00820;
deltaK = M_.params(19);
M_.params(14) = 0.11649;
squig = M_.params(14);
M_.params(15) = 0.98444;
beta = M_.params(15);
M_.params(1) = 0.16070;
nu = M_.params(1);
M_.params(2) = 1/(1-M_.params(11));
EIS = M_.params(2);
M_.params(6) = 4.3;
scale_y = M_.params(6);
M_.params(5) = 0.2727272727272727;
iotaX = M_.params(5);
M_.params(20) = 0.2;
Sg = M_.params(20);
M_.params(28) = 0.33;
alpha = M_.params(28);
M_.params(27) = 0.0021;
deltaX = M_.params(27);
M_.params(3) = 0;
xbar = M_.params(3);
M_.params(4) = 0.45;
iotaE = M_.params(4);
M_.params(8) = 3;
chi = M_.params(8);
M_.params(26) = 0.85;
zetaY_tilda = M_.params(26);
M_.params(22) = .029;
nH_sts = M_.params(22);
M_.params(21) = 0.2-M_.params(22);
nY_sts = M_.params(21);
M_.params(33) = 1;
vartheta = M_.params(33);
M_.params(34) = 0.0000;
vtax = M_.params(34);
M_.params(43) = 0.02;
eta1 = M_.params(43);
M_.params(44) = 2.6;
eta2 = M_.params(44);
M_.params(31) = 100;
xfactor = M_.params(31);
options_resid_ = struct();
display_static_residuals(M_, options_, oo_, options_resid_);
%
% HISTVAL instructions
%
M_.histval_dseries = dseries(zeros(M_.orig_maximum_lag_with_diffs_expanded, M_.orig_endo_nbr+sum([M_.aux_vars.type]==6)+M_.exo_nbr), dates(sprintf('%dY', -M_.orig_maximum_lag_with_diffs_expanded+1)), [ M_.endo_names(1:M_.orig_endo_nbr); M_.endo_names([M_.aux_vars(find([M_.aux_vars.type]==6)).endo_index]); M_.exo_names; ]);
M_.histval_dseries{'x'}(dates('0Y'))=60/M_.params(31);
if exist(['+' M_.fname '/dynamic_set_auxiliary_series.m'])
  eval(['M_.histval_dseries = ' M_.fname '.dynamic_set_auxiliary_series(M_.histval_dseries, M_.params);']);
end
M_.endo_histval = M_.histval_dseries{M_.endo_names{:}}(dates(sprintf('%dY', 1-M_.maximum_lag)):dates('0Y')).data';
M_.endo_histval(isnan(M_.endo_histval)) = 0;
M_.exo_histval = M_.histval_dseries{M_.exo_names{:}}(dates(sprintf('%dY', 1-M_.maximum_lag)):dates('0Y')).data';
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
options_.k_order_solver = true;
options_.ar = 0;
options_.irf = 0;
options_.nocorr = true;
options_.nofunctions = true;
options_.nomoments = true;
options_.noprint = true;
options_.order = 3;
options_.pruning = true;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_EZ_results.mat'], 'options_mom_', '-append');
end
disp('Note: 5 warning(s) encountered in the preprocessor')
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end

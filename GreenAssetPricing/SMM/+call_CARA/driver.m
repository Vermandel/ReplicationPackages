%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'call_CARA';
M_.dynare_version = '6.1';
oo_.dynare_version = '6.1';
options_.dynare_version = '6.1';
%
% Some global variables initialization
%
global_initialization;
M_.parameter_used_with_lead_lag = true;
M_.exo_names = cell(1,1);
M_.exo_names_tex = cell(1,1);
M_.exo_names_long = cell(1,1);
M_.exo_names(1) = {'eaY'};
M_.exo_names_tex(1) = {'{std(\eta_{At})}'};
M_.exo_names_long(1) = {'Productivity shock'};
M_.endo_names = cell(60,1);
M_.endo_names_tex = cell(60,1);
M_.endo_names_long = cell(60,1);
M_.endo_names(1) = {'sdf'};
M_.endo_names_tex(1) = {'sdf'};
M_.endo_names_long(1) = {'sdf'};
M_.endo_names(2) = {'c'};
M_.endo_names_tex(2) = {'c'};
M_.endo_names_long(2) = {'c'};
M_.endo_names(3) = {'kT'};
M_.endo_names_tex(3) = {'kT'};
M_.endo_names_long(3) = {'kT'};
M_.endo_names(4) = {'x'};
M_.endo_names_tex(4) = {'x'};
M_.endo_names_long(4) = {'x'};
M_.endo_names(5) = {'kY'};
M_.endo_names_tex(5) = {'kY'};
M_.endo_names_long(5) = {'kY'};
M_.endo_names(6) = {'kH'};
M_.endo_names_tex(6) = {'kH'};
M_.endo_names_long(6) = {'kH'};
M_.endo_names(7) = {'iT'};
M_.endo_names_tex(7) = {'iT'};
M_.endo_names_long(7) = {'iT'};
M_.endo_names(8) = {'lambda'};
M_.endo_names_tex(8) = {'lambda'};
M_.endo_names_long(8) = {'lambda'};
M_.endo_names(9) = {'q'};
M_.endo_names_tex(9) = {'q'};
M_.endo_names_long(9) = {'q'};
M_.endo_names(10) = {'phi'};
M_.endo_names_tex(10) = {'phi'};
M_.endo_names_long(10) = {'phi'};
M_.endo_names(11) = {'varrho'};
M_.endo_names_tex(11) = {'varrho'};
M_.endo_names_long(11) = {'varrho'};
M_.endo_names(12) = {'gamma'};
M_.endo_names_tex(12) = {'gamma'};
M_.endo_names_long(12) = {'gamma'};
M_.endo_names(13) = {'y'};
M_.endo_names_tex(13) = {'y'};
M_.endo_names_long(13) = {'y'};
M_.endo_names(14) = {'iH'};
M_.endo_names_tex(14) = {'iH'};
M_.endo_names_long(14) = {'iH'};
M_.endo_names(15) = {'d'};
M_.endo_names_tex(15) = {'d'};
M_.endo_names_long(15) = {'d'};
M_.endo_names(16) = {'aY'};
M_.endo_names_tex(16) = {'aY'};
M_.endo_names_long(16) = {'aY'};
M_.endo_names(17) = {'e'};
M_.endo_names_tex(17) = {'e'};
M_.endo_names_long(17) = {'e'};
M_.endo_names(18) = {'w'};
M_.endo_names_tex(18) = {'w'};
M_.endo_names_long(18) = {'w'};
M_.endo_names(19) = {'rF'};
M_.endo_names_tex(19) = {'rF'};
M_.endo_names_long(19) = {'rF'};
M_.endo_names(20) = {'pE'};
M_.endo_names_tex(20) = {'pE'};
M_.endo_names_long(20) = {'pE'};
M_.endo_names(21) = {'realEPquat'};
M_.endo_names_tex(21) = {'realEPquat'};
M_.endo_names_long(21) = {'realEPquat'};
M_.endo_names(22) = {'gy'};
M_.endo_names_tex(22) = {'gy'};
M_.endo_names_long(22) = {'gy'};
M_.endo_names(23) = {'gc'};
M_.endo_names_tex(23) = {'gc'};
M_.endo_names_long(23) = {'gc'};
M_.endo_names(24) = {'giT'};
M_.endo_names_tex(24) = {'giT'};
M_.endo_names_long(24) = {'giT'};
M_.endo_names(25) = {'cyrat'};
M_.endo_names_tex(25) = {'cyrat'};
M_.endo_names_long(25) = {'cyrat'};
M_.endo_names(26) = {'rFquat'};
M_.endo_names_tex(26) = {'rFquat'};
M_.endo_names_long(26) = {'rFquat'};
M_.endo_names(27) = {'kHkYrat'};
M_.endo_names_tex(27) = {'kHkYrat'};
M_.endo_names_long(27) = {'kHkYrat'};
M_.endo_names(28) = {'SCC'};
M_.endo_names_tex(28) = {'SCC'};
M_.endo_names_long(28) = {'SCC'};
M_.endo_names(29) = {'c_x'};
M_.endo_names_tex(29) = {'c\_x'};
M_.endo_names_long(29) = {'c_x'};
M_.endo_names(30) = {'z'};
M_.endo_names_tex(30) = {'z'};
M_.endo_names_long(30) = {'z'};
M_.endo_names(31) = {'multH'};
M_.endo_names_tex(31) = {'multH'};
M_.endo_names_long(31) = {'multH'};
M_.endo_names(32) = {'u'};
M_.endo_names_tex(32) = {'u'};
M_.endo_names_long(32) = {'u'};
M_.endo_names(33) = {'U'};
M_.endo_names_tex(33) = {'U'};
M_.endo_names_long(33) = {'U'};
M_.endo_names(34) = {'gq'};
M_.endo_names_tex(34) = {'gq'};
M_.endo_names_long(34) = {'gq'};
M_.endo_names(35) = {'gd'};
M_.endo_names_tex(35) = {'gd'};
M_.endo_names_long(35) = {'gd'};
M_.endo_names(36) = {'gE'};
M_.endo_names_tex(36) = {'gE'};
M_.endo_names_long(36) = {'gE'};
M_.endo_names(37) = {'X'};
M_.endo_names_tex(37) = {'X'};
M_.endo_names_long(37) = {'X'};
M_.endo_names(38) = {'pB'};
M_.endo_names_tex(38) = {'pB'};
M_.endo_names_long(38) = {'pB'};
M_.endo_names(39) = {'ln_SCC'};
M_.endo_names_tex(39) = {'ln\_SCC'};
M_.endo_names_long(39) = {'ln_SCC'};
M_.endo_names(40) = {'ln_c'};
M_.endo_names_tex(40) = {'ln\_c'};
M_.endo_names_long(40) = {'ln_c'};
M_.endo_names(41) = {'ln_y'};
M_.endo_names_tex(41) = {'ln\_y'};
M_.endo_names_long(41) = {'ln_y'};
M_.endo_names(42) = {'Esdf'};
M_.endo_names_tex(42) = {'Esdf'};
M_.endo_names_long(42) = {'Esdf'};
M_.endo_names(43) = {'muSDF'};
M_.endo_names_tex(43) = {'muSDF'};
M_.endo_names_long(43) = {'muSDF'};
M_.endo_names(44) = {'varSDF'};
M_.endo_names_tex(44) = {'varSDF'};
M_.endo_names_long(44) = {'varSDF'};
M_.endo_names(45) = {'skewSDF'};
M_.endo_names_tex(45) = {'skewSDF'};
M_.endo_names_long(45) = {'skewSDF'};
M_.endo_names(46) = {'ln_pd'};
M_.endo_names_tex(46) = {'ln\_pd'};
M_.endo_names_long(46) = {'ln_pd'};
M_.endo_names(47) = {'asset_return'};
M_.endo_names_tex(47) = {'asset\_return'};
M_.endo_names_long(47) = {'asset_return'};
M_.endo_names(48) = {'EC1'};
M_.endo_names_tex(48) = {'EC1'};
M_.endo_names_long(48) = {'EC1'};
M_.endo_names(49) = {'EretB'};
M_.endo_names_tex(49) = {'EretB'};
M_.endo_names_long(49) = {'EretB'};
M_.endo_names(50) = {'bpann'};
M_.endo_names_tex(50) = {'bpann'};
M_.endo_names_long(50) = {'bpann'};
M_.endo_names(51) = {'ln_c100'};
M_.endo_names_tex(51) = {'ln\_c100'};
M_.endo_names_long(51) = {'ln_c100'};
M_.endo_names(52) = {'ESCC'};
M_.endo_names_tex(52) = {'ESCC'};
M_.endo_names_long(52) = {'ESCC'};
M_.endo_names(53) = {'vE_irfs'};
M_.endo_names_tex(53) = {'vE\_irfs'};
M_.endo_names_long(53) = {'vE_irfs'};
M_.endo_names(54) = {'EPquat'};
M_.endo_names_tex(54) = {'EPquat'};
M_.endo_names_long(54) = {'EPquat'};
M_.endo_names(55) = {'ln_z'};
M_.endo_names_tex(55) = {'ln\_z'};
M_.endo_names_long(55) = {'ln_z'};
M_.endo_names(56) = {'ln_EP'};
M_.endo_names_tex(56) = {'ln\_EP'};
M_.endo_names_long(56) = {'ln_EP'};
M_.endo_names(57) = {'ln_rF'};
M_.endo_names_tex(57) = {'ln\_rF'};
M_.endo_names_long(57) = {'ln_rF'};
M_.endo_names(58) = {'mu'};
M_.endo_names_tex(58) = {'mu'};
M_.endo_names_long(58) = {'mu'};
M_.endo_names(59) = {'vE'};
M_.endo_names_tex(59) = {'vE'};
M_.endo_names_long(59) = {'vE'};
M_.endo_names(60) = {'vX'};
M_.endo_names_tex(60) = {'vX'};
M_.endo_names_long(60) = {'vX'};
M_.endo_partitions = struct();
M_.param_names = cell(44,1);
M_.param_names_tex = cell(44,1);
M_.param_names_long = cell(44,1);
M_.param_names(1) = {'nu'};
M_.param_names_tex(1) = {'nu'};
M_.param_names_long(1) = {'nu'};
M_.param_names(2) = {'EIS'};
M_.param_names_tex(2) = {'EIS'};
M_.param_names_long(2) = {'EIS'};
M_.param_names(3) = {'xbar'};
M_.param_names_tex(3) = {'xbar'};
M_.param_names_long(3) = {'xbar'};
M_.param_names(4) = {'iotaE'};
M_.param_names_tex(4) = {'iotaE'};
M_.param_names_long(4) = {'iotaE'};
M_.param_names(5) = {'iotaX'};
M_.param_names_tex(5) = {'iotaX'};
M_.param_names_long(5) = {'iotaX'};
M_.param_names(6) = {'scale_y'};
M_.param_names_tex(6) = {'scale\_y'};
M_.param_names_long(6) = {'scale_y'};
M_.param_names(7) = {'scale_ce'};
M_.param_names_tex(7) = {'scale\_ce'};
M_.param_names_long(7) = {'scale_ce'};
M_.param_names(8) = {'chi'};
M_.param_names_tex(8) = {'chi'};
M_.param_names_long(8) = {'chi'};
M_.param_names(9) = {'estar'};
M_.param_names_tex(9) = {'estar'};
M_.param_names_long(9) = {'estar'};
M_.param_names(10) = {'kappa'};
M_.param_names_tex(10) = {'kappa'};
M_.param_names_long(10) = {'kappa'};
M_.param_names(11) = {'thetaEZ'};
M_.param_names_tex(11) = {'{\theta}'};
M_.param_names_long(11) = {'Utility curvature'};
M_.param_names(12) = {'mhab'};
M_.param_names_tex(12) = {'{\varpi}'};
M_.param_names_long(12) = {'Habit smoothing'};
M_.param_names(13) = {'eps'};
M_.param_names_tex(13) = {'{\epsilon}'};
M_.param_names_long(13) = {'Investment cost'};
M_.param_names(14) = {'squig'};
M_.param_names_tex(14) = {'{\xi}'};
M_.param_names_long(14) = {'Capital in R\&D'};
M_.param_names(15) = {'beta'};
M_.param_names_tex(15) = {'{\beta}'};
M_.param_names_long(15) = {'Discount factor'};
M_.param_names(16) = {'gamma_sts'};
M_.param_names_tex(16) = {'{g}'};
M_.param_names_long(16) = {'Steady state growth'};
M_.param_names(17) = {'sigma'};
M_.param_names_tex(17) = {'{\sigma}'};
M_.param_names_long(17) = {'Risk aversion'};
M_.param_names(18) = {'rhoY'};
M_.param_names_tex(18) = {'{\rho_A}'};
M_.param_names_long(18) = {'Persistence productivity'};
M_.param_names(19) = {'deltaK'};
M_.param_names_tex(19) = {'{\delta_K}'};
M_.param_names_long(19) = {'Capital depreciation'};
M_.param_names(20) = {'Sg'};
M_.param_names_tex(20) = {'Sg'};
M_.param_names_long(20) = {'Sg'};
M_.param_names(21) = {'nY_sts'};
M_.param_names_tex(21) = {'nY\_sts'};
M_.param_names_long(21) = {'nY_sts'};
M_.param_names(22) = {'nH_sts'};
M_.param_names_tex(22) = {'nH\_sts'};
M_.param_names_long(22) = {'nH_sts'};
M_.param_names(23) = {'th1'};
M_.param_names_tex(23) = {'th1'};
M_.param_names_long(23) = {'th1'};
M_.param_names(24) = {'th2'};
M_.param_names_tex(24) = {'th2'};
M_.param_names_long(24) = {'th2'};
M_.param_names(25) = {'zetaY'};
M_.param_names_tex(25) = {'zetaY'};
M_.param_names_long(25) = {'zetaY'};
M_.param_names(26) = {'zetaY_tilda'};
M_.param_names_tex(26) = {'zetaY\_tilda'};
M_.param_names_long(26) = {'zetaY_tilda'};
M_.param_names(27) = {'deltaX'};
M_.param_names_tex(27) = {'deltaX'};
M_.param_names_long(27) = {'deltaX'};
M_.param_names(28) = {'alpha'};
M_.param_names_tex(28) = {'alpha'};
M_.param_names_long(28) = {'alpha'};
M_.param_names(29) = {'g'};
M_.param_names_tex(29) = {'g'};
M_.param_names_long(29) = {'g'};
M_.param_names(30) = {'std_y'};
M_.param_names_tex(30) = {'std\_y'};
M_.param_names_long(30) = {'std_y'};
M_.param_names(31) = {'xfactor'};
M_.param_names_tex(31) = {'xfactor'};
M_.param_names_long(31) = {'xfactor'};
M_.param_names(32) = {'scale_u'};
M_.param_names_tex(32) = {'scale\_u'};
M_.param_names_long(32) = {'scale_u'};
M_.param_names(33) = {'vartheta'};
M_.param_names_tex(33) = {'vartheta'};
M_.param_names_long(33) = {'vartheta'};
M_.param_names(34) = {'vtax'};
M_.param_names_tex(34) = {'vtax'};
M_.param_names_long(34) = {'vtax'};
M_.param_names(35) = {'eD'};
M_.param_names_tex(35) = {'eD'};
M_.param_names_long(35) = {'eD'};
M_.param_names(36) = {'eC'};
M_.param_names_tex(36) = {'eC'};
M_.param_names_long(36) = {'eC'};
M_.param_names(37) = {'eE'};
M_.param_names_tex(37) = {'eE'};
M_.param_names_long(37) = {'eE'};
M_.param_names(38) = {'eG'};
M_.param_names_tex(38) = {'eG'};
M_.param_names_long(38) = {'eG'};
M_.param_names(39) = {'aD'};
M_.param_names_tex(39) = {'aD'};
M_.param_names_long(39) = {'aD'};
M_.param_names(40) = {'aC'};
M_.param_names_tex(40) = {'aC'};
M_.param_names_long(40) = {'aC'};
M_.param_names(41) = {'aE'};
M_.param_names_tex(41) = {'aE'};
M_.param_names_long(41) = {'aE'};
M_.param_names(42) = {'aG'};
M_.param_names_tex(42) = {'aG'};
M_.param_names_long(42) = {'aG'};
M_.param_names(43) = {'eta1'};
M_.param_names_tex(43) = {'eta1'};
M_.param_names_long(43) = {'eta1'};
M_.param_names(44) = {'eta2'};
M_.param_names_tex(44) = {'eta2'};
M_.param_names_long(44) = {'eta2'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 1;
M_.endo_nbr = 60;
M_.param_nbr = 44;
M_.orig_endo_nbr = 60;
M_.aux_vars = [];
M_.Sigma_e = zeros(1, 1);
M_.Correlation_matrix = eye(1, 1);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [1 2 3 4 6 7 9 11 12 13 14 15 16 19 20 21 22 23 24 26 27 28 29 30 31 32 33 35 37 38 39 41 42 45 46 47 48 49 50 53 54 55 57 58 60];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 60;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 13 73;
 1 14 74;
 2 15 0;
 3 16 0;
 0 17 75;
 0 18 0;
 4 19 76;
 5 20 0;
 6 21 77;
 0 22 78;
 0 23 79;
 7 24 0;
 8 25 80;
 0 26 81;
 9 27 82;
 10 28 0;
 11 29 0;
 0 30 0;
 0 31 0;
 12 32 83;
 0 33 0;
 0 34 0;
 0 35 0;
 0 36 0;
 0 37 0;
 0 38 0;
 0 39 0;
 0 40 84;
 0 41 0;
 0 42 0;
 0 43 85;
 0 44 86;
 0 45 0;
 0 46 0;
 0 47 0;
 0 48 0;
 0 49 0;
 0 50 87;
 0 51 0;
 0 52 0;
 0 53 0;
 0 54 0;
 0 55 0;
 0 56 0;
 0 57 0;
 0 58 0;
 0 59 0;
 0 60 0;
 0 61 0;
 0 62 0;
 0 63 0;
 0 64 0;
 0 65 0;
 0 66 0;
 0 67 0;
 0 68 0;
 0 69 0;
 0 70 0;
 0 71 0;
 0 72 88;]';
M_.nstatic = 38;
M_.nfwrd   = 10;
M_.npred   = 6;
M_.nboth   = 6;
M_.nsfwrd   = 16;
M_.nspred   = 12;
M_.ndynamic   = 22;
M_.dynamic_tmp_nbr = [33; 43; 54; 28; ];
M_.equations_tags = {
  1 , 'name' , 'u' ;
  2 , 'name' , 'sdf' ;
  3 , 'name' , 'lambda' ;
  4 , 'name' , 'multH' ;
  5 , 'name' , 'z' ;
  6 , 'name' , 'iH' ;
  7 , 'name' , 'phi' ;
  8 , 'name' , 'gamma' ;
  9 , 'name' , '9' ;
  10 , 'name' , 'w' ;
  11 , 'name' , 'd' ;
  12 , 'name' , 'varrho' ;
  13 , 'name' , '13' ;
  14 , 'name' , 'q' ;
  15 , 'name' , '15' ;
  16 , 'name' , 'y' ;
  17 , 'name' , 'kT' ;
  18 , 'name' , '18' ;
  19 , 'name' , 'e' ;
  20 , 'name' , '20' ;
  21 , 'name' , '21' ;
  22 , 'name' , 'pE' ;
  23 , 'name' , '23' ;
  24 , 'name' , 'realEPquat' ;
  25 , 'name' , 'rFquat' ;
  26 , 'name' , 'cyrat' ;
  27 , 'name' , 'kHkYrat' ;
  28 , 'name' , 'gy' ;
  29 , 'name' , 'gc' ;
  30 , 'name' , 'giT' ;
  31 , 'name' , 'c_x' ;
  32 , 'name' , 'SCC' ;
  33 , 'name' , '33' ;
  34 , 'name' , '34' ;
  35 , 'name' , 'vX' ;
  36 , 'name' , 'U' ;
  37 , 'name' , 'gq' ;
  38 , 'name' , 'gd' ;
  39 , 'name' , 'gE' ;
  40 , 'name' , 'X' ;
  41 , 'name' , 'asset_return' ;
  42 , 'name' , 'EPquat' ;
  43 , 'name' , 'Esdf' ;
  44 , 'name' , 'muSDF' ;
  45 , 'name' , 'varSDF' ;
  46 , 'name' , 'skewSDF' ;
  47 , 'name' , 'ln_pd' ;
  48 , 'name' , 'EC1' ;
  49 , 'name' , 'pB' ;
  50 , 'name' , 'EretB' ;
  51 , 'name' , 'bpann' ;
  52 , 'name' , 'ESCC' ;
  53 , 'name' , 'ln_SCC' ;
  54 , 'name' , 'ln_c' ;
  55 , 'name' , 'ln_y' ;
  56 , 'name' , 'ln_c100' ;
  57 , 'name' , 'ln_EP' ;
  58 , 'name' , 'ln_rF' ;
  59 , 'name' , 'ln_z' ;
  60 , 'name' , 'vE_irfs' ;
};
M_.mapping.sdf.eqidx = [2 7 14 22 23 32 35 43 44 45 46 49 ];
M_.mapping.c.eqidx = [1 3 4 20 26 29 31 32 35 48 54 ];
M_.mapping.kT.eqidx = [13 14 15 17 ];
M_.mapping.x.eqidx = [1 3 4 6 16 18 31 32 35 40 ];
M_.mapping.kY.eqidx = [9 14 16 17 27 ];
M_.mapping.kH.eqidx = [6 9 17 27 ];
M_.mapping.iT.eqidx = [11 13 14 15 20 30 ];
M_.mapping.lambda.eqidx = [2 3 ];
M_.mapping.q.eqidx = [13 14 37 ];
M_.mapping.phi.eqidx = [7 9 32 35 ];
M_.mapping.varrho.eqidx = [7 9 12 14 32 35 ];
M_.mapping.gamma.eqidx = [1 2 4 8 15 22 24 28 29 30 32 35 38 41 42 49 57 ];
M_.mapping.y.eqidx = [7 9 10 11 14 16 19 20 26 28 32 35 55 ];
M_.mapping.iH.eqidx = [6 7 8 9 32 35 ];
M_.mapping.d.eqidx = [11 22 24 38 41 42 47 57 ];
M_.mapping.aY.eqidx = [6 16 21 ];
M_.mapping.e.eqidx = [11 18 19 39 ];
M_.mapping.w.eqidx = [10 11 ];
M_.mapping.rF.eqidx = [23 24 25 42 51 57 58 ];
M_.mapping.pE.eqidx = [22 24 41 42 47 57 ];
M_.mapping.realEPquat.eqidx = [24 ];
M_.mapping.gy.eqidx = [28 ];
M_.mapping.gc.eqidx = [29 ];
M_.mapping.giT.eqidx = [30 ];
M_.mapping.cyrat.eqidx = [26 ];
M_.mapping.rFquat.eqidx = [25 ];
M_.mapping.kHkYrat.eqidx = [27 ];
M_.mapping.SCC.eqidx = [32 48 52 53 ];
M_.mapping.c_x.eqidx = [31 ];
M_.mapping.z.eqidx = [5 ];
M_.mapping.multH.eqidx = [3 4 ];
M_.mapping.u.eqidx = [1 36 ];
M_.mapping.eaY.eqidx = [21 ];
M_.mapping.U.eqidx = [36 ];
M_.mapping.gq.eqidx = [37 ];
M_.mapping.gd.eqidx = [38 ];
M_.mapping.gE.eqidx = [39 ];
M_.mapping.X.eqidx = [40 ];
M_.mapping.pB.eqidx = [49 50 ];
M_.mapping.ln_SCC.eqidx = [53 ];
M_.mapping.ln_c.eqidx = [54 56 ];
M_.mapping.ln_y.eqidx = [55 ];
M_.mapping.Esdf.eqidx = [43 ];
M_.mapping.muSDF.eqidx = [44 45 46 ];
M_.mapping.varSDF.eqidx = [45 ];
M_.mapping.skewSDF.eqidx = [46 ];
M_.mapping.ln_pd.eqidx = [47 ];
M_.mapping.asset_return.eqidx = [41 ];
M_.mapping.EC1.eqidx = [48 ];
M_.mapping.EretB.eqidx = [50 51 ];
M_.mapping.bpann.eqidx = [51 ];
M_.mapping.ln_c100.eqidx = [56 ];
M_.mapping.ESCC.eqidx = [52 ];
M_.mapping.vE_irfs.eqidx = [60 ];
M_.mapping.EPquat.eqidx = [42 ];
M_.mapping.ln_z.eqidx = [59 ];
M_.mapping.ln_EP.eqidx = [57 ];
M_.mapping.ln_rF.eqidx = [58 ];
M_.mapping.mu.eqidx = [11 12 19 20 33 ];
M_.mapping.vE.eqidx = [11 12 33 34 60 ];
M_.mapping.vX.eqidx = [34 35 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 1;
M_.block_structure.block(1).mfs = 1;
M_.block_structure.block(1).equation = [ 5];
M_.block_structure.block(1).variable = [ 30];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 1;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [2 ];
M_.block_structure.block(2).Simulation_Type = 3;
M_.block_structure.block(2).endo_nbr = 1;
M_.block_structure.block(2).mfs = 1;
M_.block_structure.block(2).equation = [ 21];
M_.block_structure.block(2).variable = [ 16];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 2;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [0 1 ];
M_.block_structure.block(3).Simulation_Type = 1;
M_.block_structure.block(3).endo_nbr = 1;
M_.block_structure.block(3).mfs = 1;
M_.block_structure.block(3).equation = [ 59];
M_.block_structure.block(3).variable = [ 55];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 1;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [2 ];
M_.block_structure.block(4).Simulation_Type = 8;
M_.block_structure.block(4).endo_nbr = 19;
M_.block_structure.block(4).mfs = 19;
M_.block_structure.block(4).equation = [ 33 6 18 19 8 35 14 3 4 7 9 34 12 13 15 16 17 20 2];
M_.block_structure.block(4).variable = [ 59 6 17 58 12 4 3 8 31 10 14 60 11 9 7 13 5 2 1];
M_.block_structure.block(4).is_linear = false;
M_.block_structure.block(4).NNZDerivatives = 78;
M_.block_structure.block(4).bytecode_jacob_cols_to_sparse = [5 6 7 8 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 47 48 49 50 51 52 53 54 55 56 57 ];
M_.block_structure.block(5).Simulation_Type = 1;
M_.block_structure.block(5).endo_nbr = 1;
M_.block_structure.block(5).mfs = 1;
M_.block_structure.block(5).equation = [ 10];
M_.block_structure.block(5).variable = [ 18];
M_.block_structure.block(5).is_linear = true;
M_.block_structure.block(5).NNZDerivatives = 1;
M_.block_structure.block(5).bytecode_jacob_cols_to_sparse = [2 ];
M_.block_structure.block(6).Simulation_Type = 2;
M_.block_structure.block(6).endo_nbr = 2;
M_.block_structure.block(6).mfs = 2;
M_.block_structure.block(6).equation = [ 32 49];
M_.block_structure.block(6).variable = [ 28 38];
M_.block_structure.block(6).is_linear = true;
M_.block_structure.block(6).NNZDerivatives = 4;
M_.block_structure.block(6).bytecode_jacob_cols_to_sparse = [3 4 5 6 ];
M_.block_structure.block(7).Simulation_Type = 1;
M_.block_structure.block(7).endo_nbr = 2;
M_.block_structure.block(7).mfs = 2;
M_.block_structure.block(7).equation = [ 11 50];
M_.block_structure.block(7).variable = [ 15 49];
M_.block_structure.block(7).is_linear = true;
M_.block_structure.block(7).NNZDerivatives = 2;
M_.block_structure.block(7).bytecode_jacob_cols_to_sparse = [3 4 ];
M_.block_structure.block(8).Simulation_Type = 3;
M_.block_structure.block(8).endo_nbr = 1;
M_.block_structure.block(8).mfs = 1;
M_.block_structure.block(8).equation = [ 23];
M_.block_structure.block(8).variable = [ 19];
M_.block_structure.block(8).is_linear = false;
M_.block_structure.block(8).NNZDerivatives = 1;
M_.block_structure.block(8).bytecode_jacob_cols_to_sparse = [1 ];
M_.block_structure.block(9).Simulation_Type = 2;
M_.block_structure.block(9).endo_nbr = 1;
M_.block_structure.block(9).mfs = 1;
M_.block_structure.block(9).equation = [ 22];
M_.block_structure.block(9).variable = [ 20];
M_.block_structure.block(9).is_linear = true;
M_.block_structure.block(9).NNZDerivatives = 2;
M_.block_structure.block(9).bytecode_jacob_cols_to_sparse = [2 3 ];
M_.block_structure.block(10).Simulation_Type = 1;
M_.block_structure.block(10).endo_nbr = 14;
M_.block_structure.block(10).mfs = 14;
M_.block_structure.block(10).equation = [ 44 51 48 47 46 45 52 53 54 55 56 57 58 60];
M_.block_structure.block(10).variable = [ 43 50 48 46 45 44 52 39 40 41 51 56 57 53];
M_.block_structure.block(10).is_linear = true;
M_.block_structure.block(10).NNZDerivatives = 17;
M_.block_structure.block(10).bytecode_jacob_cols_to_sparse = [15 16 17 18 19 20 21 22 23 24 25 26 27 28 ];
M_.block_structure.block(11).Simulation_Type = 2;
M_.block_structure.block(11).endo_nbr = 1;
M_.block_structure.block(11).mfs = 1;
M_.block_structure.block(11).equation = [ 1];
M_.block_structure.block(11).variable = [ 32];
M_.block_structure.block(11).is_linear = true;
M_.block_structure.block(11).NNZDerivatives = 2;
M_.block_structure.block(11).bytecode_jacob_cols_to_sparse = [2 3 ];
M_.block_structure.block(12).Simulation_Type = 1;
M_.block_structure.block(12).endo_nbr = 16;
M_.block_structure.block(12).mfs = 16;
M_.block_structure.block(12).equation = [ 43 42 41 40 39 38 37 36 31 30 29 28 27 26 25 24];
M_.block_structure.block(12).variable = [ 42 54 47 37 36 35 34 33 29 24 23 22 27 25 26 21];
M_.block_structure.block(12).is_linear = true;
M_.block_structure.block(12).NNZDerivatives = 16;
M_.block_structure.block(12).bytecode_jacob_cols_to_sparse = [17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([]);
M_.block_structure.block(3).g1_sparse_colval = int32([]);
M_.block_structure.block(3).g1_sparse_colptr = int32([]);
M_.block_structure.block(4).g1_sparse_rowval = int32([9 19 2 3 8 16 14 15 17 19 1 12 13 2 11 17 3 4 1 4 13 18 5 6 15 3 6 9 7 15 8 19 8 9 10 11 2 5 11 6 12 11 13 7 14 14 15 18 4 11 16 18 11 16 17 8 18 19 9 6 10 6 10 6 6 7 10 7 7 6 7 10 7 6 9 6 7 10 ]);
M_.block_structure.block(4).g1_sparse_colval = int32([5 5 6 6 6 6 7 7 7 8 20 20 20 21 21 21 22 22 23 23 23 23 24 24 24 25 25 25 26 26 27 27 28 28 29 29 30 30 30 31 31 32 32 33 33 34 34 34 35 35 35 35 36 36 36 37 37 38 47 48 48 49 49 50 51 51 51 52 53 54 54 54 55 56 56 57 57 57 ]);
M_.block_structure.block(4).g1_sparse_colptr = int32([1 1 1 1 1 3 7 10 11 11 11 11 11 11 11 11 11 11 11 11 14 17 19 23 26 29 31 33 35 37 40 42 44 46 49 53 56 58 59 59 59 59 59 59 59 59 59 60 62 64 65 68 69 70 73 74 76 79 ]);
M_.block_structure.block(5).g1_sparse_rowval = int32([]);
M_.block_structure.block(5).g1_sparse_colval = int32([]);
M_.block_structure.block(5).g1_sparse_colptr = int32([]);
M_.block_structure.block(6).g1_sparse_rowval = int32([]);
M_.block_structure.block(6).g1_sparse_colval = int32([]);
M_.block_structure.block(6).g1_sparse_colptr = int32([]);
M_.block_structure.block(7).g1_sparse_rowval = int32([]);
M_.block_structure.block(7).g1_sparse_colval = int32([]);
M_.block_structure.block(7).g1_sparse_colptr = int32([]);
M_.block_structure.block(8).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(8).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(8).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(9).g1_sparse_rowval = int32([]);
M_.block_structure.block(9).g1_sparse_colval = int32([]);
M_.block_structure.block(9).g1_sparse_colptr = int32([]);
M_.block_structure.block(10).g1_sparse_rowval = int32([]);
M_.block_structure.block(10).g1_sparse_colval = int32([]);
M_.block_structure.block(10).g1_sparse_colptr = int32([]);
M_.block_structure.block(11).g1_sparse_rowval = int32([]);
M_.block_structure.block(11).g1_sparse_colval = int32([]);
M_.block_structure.block(11).g1_sparse_colptr = int32([]);
M_.block_structure.block(12).g1_sparse_rowval = int32([]);
M_.block_structure.block(12).g1_sparse_colval = int32([]);
M_.block_structure.block(12).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 30 16 55 59 6 17 58 12 4 3 8 31 10 14 60 11 9 7 13 5 2 1 18 28 38 15 49 19 20 43 50 48 46 45 44 52 39 40 41 51 56 57 53 32 42 54 47 37 36 35 34 33 29 24 23 22 27 25 26 21];
M_.block_structure.equation_reordered = [ 5 21 59 33 6 18 19 8 35 14 3 4 7 9 34 12 13 15 16 17 20 2 10 32 49 11 50 23 22 44 51 48 47 46 45 52 53 54 55 56 57 58 60 1 43 42 41 40 39 38 37 36 31 30 29 28 27 26 25 24];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 1 4;
 2 8;
 2 12;
 3 4;
 4 12;
 6 4;
 13 3;
 15 3;
 16 4;
 17 3;
 18 4;
 21 16;
 24 12;
 24 20;
 28 12;
 28 13;
 29 2;
 29 12;
 30 7;
 30 12;
 31 4;
 37 9;
 38 12;
 38 15;
 39 17;
 41 12;
 41 20;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 2;
 1 12;
 1 32;
 2 1;
 2 8;
 3 2;
 3 8;
 3 31;
 4 4;
 4 31;
 5 30;
 6 6;
 6 14;
 6 16;
 7 10;
 8 12;
 8 14;
 9 5;
 9 6;
 9 10;
 9 11;
 9 13;
 9 14;
 10 13;
 10 18;
 11 7;
 11 13;
 11 15;
 11 17;
 11 18;
 11 58;
 11 59;
 12 11;
 12 58;
 12 59;
 13 7;
 13 9;
 14 3;
 14 9;
 15 3;
 15 7;
 15 12;
 16 5;
 16 13;
 16 16;
 17 5;
 17 6;
 18 4;
 18 17;
 19 13;
 19 17;
 19 58;
 20 2;
 20 7;
 20 13;
 20 58;
 21 16;
 22 12;
 22 20;
 23 19;
 24 15;
 24 19;
 24 20;
 24 21;
 25 19;
 25 26;
 26 2;
 26 13;
 26 25;
 27 5;
 27 6;
 27 27;
 28 13;
 28 22;
 29 2;
 29 23;
 30 7;
 30 24;
 31 2;
 31 29;
 32 4;
 32 12;
 32 28;
 33 58;
 33 59;
 34 59;
 34 60;
 35 4;
 35 12;
 35 60;
 36 32;
 36 33;
 37 9;
 37 34;
 38 15;
 38 35;
 39 17;
 39 36;
 40 4;
 40 37;
 41 15;
 41 20;
 41 47;
 42 12;
 42 19;
 42 20;
 42 54;
 43 42;
 44 43;
 45 43;
 45 44;
 46 43;
 46 45;
 47 15;
 47 20;
 47 46;
 48 2;
 48 28;
 48 48;
 49 12;
 49 38;
 50 38;
 50 49;
 51 19;
 51 49;
 51 50;
 52 52;
 53 28;
 53 39;
 54 2;
 54 40;
 55 13;
 55 41;
 56 40;
 56 51;
 57 12;
 57 19;
 57 20;
 57 56;
 58 19;
 58 57;
 59 55;
 60 53;
 60 59;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 1 32;
 4 2;
 4 31;
 7 1;
 7 10;
 7 11;
 7 13;
 7 14;
 14 1;
 14 5;
 14 7;
 14 9;
 14 11;
 14 13;
 22 1;
 22 15;
 22 20;
 23 1;
 32 1;
 32 2;
 32 10;
 32 11;
 32 13;
 32 14;
 32 28;
 35 1;
 35 2;
 35 10;
 35 11;
 35 13;
 35 14;
 35 60;
 42 15;
 42 20;
 43 1;
 44 1;
 45 1;
 46 1;
 49 1;
 49 38;
 50 38;
 52 28;
 57 15;
 57 20;
];
M_.block_structure.dyn_tmp_nbr = 29;
M_.state_var = [16 17 12 4 3 8 9 7 13 2 15 20 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(60, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(1, 1);
M_.params = NaN(44, 1);
M_.endo_trends = struct('deflator', cell(60, 1), 'log_deflator', cell(60, 1), 'growth_factor', cell(60, 1), 'log_growth_factor', cell(60, 1));
M_.NNZDerivatives = [216; 329; 225; ];
M_.dynamic_g1_sparse_rowval = int32([29 13 15 17 1 3 6 16 18 31 30 2 37 2 4 24 28 29 30 38 41 28 38 21 39 24 41 2 1 3 20 26 29 31 48 54 14 15 4 18 32 35 40 9 16 17 27 6 9 17 27 11 13 15 20 30 2 3 13 14 37 7 9 9 12 1 8 15 22 32 35 42 49 57 9 10 11 16 19 20 26 28 55 6 8 9 11 24 38 41 47 6 16 21 11 18 19 39 10 11 23 24 25 42 51 57 58 22 24 41 42 47 57 24 28 29 30 26 25 27 32 48 53 31 5 3 4 1 36 36 37 38 39 40 49 50 53 54 56 55 43 44 45 46 45 46 47 41 48 50 51 51 56 52 60 42 59 57 58 11 12 19 20 33 11 12 33 34 60 34 35 7 14 22 23 32 35 43 44 45 46 49 4 32 35 14 14 14 7 32 35 7 14 32 35 7 14 32 35 7 32 35 22 42 57 22 42 57 32 52 4 1 49 50 35 21 ]);
M_.dynamic_g1_sparse_colval = int32([2 3 3 3 4 4 4 4 4 4 7 8 9 12 12 12 12 12 12 12 12 13 15 16 17 20 20 61 62 62 62 62 62 62 62 62 63 63 64 64 64 64 64 65 65 65 65 66 66 66 66 67 67 67 67 67 68 68 69 69 69 70 70 71 71 72 72 72 72 72 72 72 72 72 73 73 73 73 73 73 73 73 73 74 74 74 75 75 75 75 75 76 76 76 77 77 77 77 78 78 79 79 79 79 79 79 79 80 80 80 80 80 80 81 82 83 84 85 86 87 88 88 88 89 90 91 91 92 92 93 94 95 96 97 98 98 99 100 100 101 102 103 103 103 104 105 106 107 108 109 109 110 111 112 113 114 115 116 117 118 118 118 118 118 119 119 119 119 119 120 120 121 121 121 121 121 121 121 121 121 121 121 122 122 122 125 127 129 130 130 130 131 131 131 131 133 133 133 133 134 134 134 135 135 135 140 140 140 148 148 151 152 158 158 180 181 ]);
M_.dynamic_g1_sparse_colptr = int32([1 1 2 5 11 11 11 12 13 14 14 14 22 23 23 24 25 26 26 26 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 29 37 39 44 48 52 57 59 62 64 66 75 84 87 92 95 99 101 108 114 115 116 117 118 119 120 121 124 125 126 128 130 131 132 133 134 135 137 138 140 141 142 145 146 147 148 149 150 152 153 154 155 156 157 158 159 160 165 170 172 183 186 186 186 187 187 188 188 189 192 196 196 200 203 206 206 206 206 206 209 209 209 209 209 209 209 209 211 211 211 212 213 213 213 213 213 213 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 215 216 217 ]);
M_.dynamic_g2_sparse_indices = int32([1 62 62 ;
1 62 4 ;
1 4 4 ;
1 72 72 ;
1 72 152 ;
2 8 8 ;
2 8 68 ;
2 8 12 ;
2 68 12 ;
2 12 12 ;
3 62 62 ;
3 62 4 ;
3 4 4 ;
3 4 91 ;
4 122 122 ;
4 122 64 ;
4 122 12 ;
4 64 64 ;
4 64 12 ;
4 12 12 ;
4 12 151 ;
6 4 4 ;
6 4 66 ;
6 4 76 ;
6 66 66 ;
6 66 76 ;
7 121 130 ;
7 121 131 ;
7 121 133 ;
7 121 134 ;
7 130 134 ;
7 131 133 ;
9 65 65 ;
9 65 71 ;
9 65 73 ;
9 66 66 ;
9 66 70 ;
9 66 74 ;
9 70 74 ;
9 71 73 ;
11 73 118 ;
11 77 119 ;
11 118 118 ;
12 118 118 ;
12 118 119 ;
13 3 3 ;
13 3 67 ;
13 3 69 ;
13 67 67 ;
13 67 69 ;
14 121 63 ;
14 121 125 ;
14 121 127 ;
14 121 129 ;
14 121 131 ;
14 121 133 ;
14 63 63 ;
14 63 127 ;
14 63 129 ;
14 125 125 ;
14 125 131 ;
14 125 133 ;
14 127 127 ;
14 127 129 ;
14 131 133 ;
15 3 3 ;
15 3 67 ;
15 63 72 ;
15 67 67 ;
16 4 4 ;
16 4 65 ;
16 4 76 ;
16 65 65 ;
16 65 76 ;
19 73 118 ;
20 73 118 ;
20 118 118 ;
21 16 16 ;
21 76 76 ;
22 121 72 ;
22 121 135 ;
22 121 140 ;
22 72 135 ;
22 72 140 ;
23 79 79 ;
24 12 75 ;
24 12 20 ;
24 12 80 ;
24 75 20 ;
24 20 20 ;
24 20 80 ;
26 62 73 ;
26 73 73 ;
27 65 65 ;
27 65 66 ;
28 12 12 ;
28 13 13 ;
28 73 73 ;
29 2 2 ;
29 62 62 ;
29 12 12 ;
30 7 7 ;
30 67 67 ;
30 12 12 ;
31 62 4 ;
31 4 4 ;
32 121 122 ;
32 121 64 ;
32 121 130 ;
32 121 131 ;
32 121 72 ;
32 121 133 ;
32 121 134 ;
32 121 148 ;
32 122 64 ;
32 122 72 ;
32 64 64 ;
32 64 72 ;
32 130 72 ;
32 130 134 ;
32 131 72 ;
32 131 133 ;
32 72 133 ;
32 72 134 ;
32 72 148 ;
33 118 118 ;
35 121 122 ;
35 121 64 ;
35 121 130 ;
35 121 131 ;
35 121 72 ;
35 121 133 ;
35 121 134 ;
35 121 180 ;
35 122 64 ;
35 122 72 ;
35 64 64 ;
35 64 72 ;
35 130 72 ;
35 130 134 ;
35 131 72 ;
35 131 133 ;
35 72 133 ;
35 72 134 ;
35 72 180 ;
37 9 9 ;
37 69 69 ;
38 12 12 ;
38 15 15 ;
38 75 75 ;
39 17 17 ;
39 77 77 ;
41 12 75 ;
41 12 20 ;
41 12 80 ;
41 75 20 ;
41 20 20 ;
41 20 80 ;
42 72 135 ;
42 72 80 ;
42 72 140 ;
42 135 80 ;
42 80 80 ;
42 80 140 ;
45 121 121 ;
45 121 103 ;
45 103 103 ;
46 121 121 ;
46 121 103 ;
46 103 103 ;
47 75 75 ;
47 75 80 ;
47 80 80 ;
48 62 62 ;
48 62 88 ;
49 121 72 ;
49 121 158 ;
49 72 72 ;
49 72 158 ;
50 98 98 ;
50 98 158 ;
53 88 88 ;
54 62 62 ;
55 73 73 ;
57 72 72 ;
57 72 135 ;
57 72 79 ;
57 72 80 ;
57 72 140 ;
57 135 135 ;
57 135 79 ;
57 135 80 ;
57 135 140 ;
57 79 79 ;
57 79 80 ;
57 79 140 ;
57 80 80 ;
57 80 140 ;
57 140 140 ;
58 79 79 ;
60 119 119 ;
]);
M_.dynamic_g3_sparse_indices = int32([1 62 62 62 ;
1 62 62 4 ;
1 62 4 4 ;
1 4 4 4 ;
1 72 72 72 ;
1 72 72 152 ;
2 8 8 8 ;
2 8 8 68 ;
2 8 8 12 ;
2 8 68 12 ;
2 8 12 12 ;
2 68 12 12 ;
2 12 12 12 ;
3 62 62 62 ;
3 62 62 4 ;
3 62 4 4 ;
3 4 4 4 ;
3 4 4 91 ;
4 122 122 122 ;
4 122 122 64 ;
4 122 122 12 ;
4 122 64 64 ;
4 122 64 12 ;
4 122 12 12 ;
4 64 64 64 ;
4 64 64 12 ;
4 64 12 12 ;
4 12 12 12 ;
4 12 12 151 ;
6 4 4 4 ;
6 4 4 66 ;
6 4 4 76 ;
6 4 66 66 ;
6 4 66 76 ;
6 66 66 66 ;
6 66 66 76 ;
7 121 130 134 ;
7 121 131 133 ;
9 65 65 65 ;
9 65 65 71 ;
9 65 65 73 ;
9 65 71 73 ;
9 66 66 66 ;
9 66 66 70 ;
9 66 66 74 ;
9 66 70 74 ;
11 73 118 118 ;
11 118 118 118 ;
12 118 118 118 ;
13 3 3 3 ;
13 3 3 67 ;
13 3 3 69 ;
13 3 67 67 ;
13 3 67 69 ;
13 67 67 67 ;
13 67 67 69 ;
14 121 63 63 ;
14 121 63 127 ;
14 121 63 129 ;
14 121 125 125 ;
14 121 125 131 ;
14 121 125 133 ;
14 121 127 127 ;
14 121 127 129 ;
14 121 131 133 ;
14 63 63 63 ;
14 63 63 127 ;
14 63 63 129 ;
14 63 127 127 ;
14 63 127 129 ;
14 125 125 125 ;
14 125 125 131 ;
14 125 125 133 ;
14 125 131 133 ;
14 127 127 127 ;
14 127 127 129 ;
15 3 3 3 ;
15 3 3 67 ;
15 3 67 67 ;
15 67 67 67 ;
16 4 4 4 ;
16 4 4 65 ;
16 4 4 76 ;
16 4 65 65 ;
16 4 65 76 ;
16 65 65 65 ;
16 65 65 76 ;
20 73 118 118 ;
20 118 118 118 ;
21 16 16 16 ;
21 76 76 76 ;
22 121 72 135 ;
22 121 72 140 ;
23 79 79 79 ;
24 12 75 20 ;
24 12 20 20 ;
24 12 20 80 ;
24 75 20 20 ;
24 20 20 20 ;
24 20 20 80 ;
26 62 73 73 ;
26 73 73 73 ;
27 65 65 65 ;
27 65 65 66 ;
28 12 12 12 ;
28 13 13 13 ;
28 73 73 73 ;
29 2 2 2 ;
29 62 62 62 ;
29 12 12 12 ;
30 7 7 7 ;
30 67 67 67 ;
30 12 12 12 ;
31 62 4 4 ;
31 4 4 4 ;
32 121 122 64 ;
32 121 122 72 ;
32 121 64 64 ;
32 121 64 72 ;
32 121 130 72 ;
32 121 130 134 ;
32 121 131 72 ;
32 121 131 133 ;
32 121 72 133 ;
32 121 72 134 ;
32 121 72 148 ;
32 122 64 64 ;
32 122 64 72 ;
32 64 64 64 ;
32 64 64 72 ;
32 130 72 134 ;
32 131 72 133 ;
33 118 118 118 ;
35 121 122 64 ;
35 121 122 72 ;
35 121 64 64 ;
35 121 64 72 ;
35 121 130 72 ;
35 121 130 134 ;
35 121 131 72 ;
35 121 131 133 ;
35 121 72 133 ;
35 121 72 134 ;
35 121 72 180 ;
35 122 64 64 ;
35 122 64 72 ;
35 64 64 64 ;
35 64 64 72 ;
35 130 72 134 ;
35 131 72 133 ;
37 9 9 9 ;
37 69 69 69 ;
38 12 12 12 ;
38 15 15 15 ;
38 75 75 75 ;
39 17 17 17 ;
39 77 77 77 ;
41 12 75 20 ;
41 12 20 20 ;
41 12 20 80 ;
41 75 20 20 ;
41 20 20 20 ;
41 20 20 80 ;
42 72 135 80 ;
42 72 80 80 ;
42 72 80 140 ;
42 135 80 80 ;
42 80 80 80 ;
42 80 80 140 ;
46 121 121 121 ;
46 121 121 103 ;
46 121 103 103 ;
46 103 103 103 ;
47 75 75 75 ;
47 75 75 80 ;
47 75 80 80 ;
47 80 80 80 ;
48 62 62 62 ;
48 62 62 88 ;
49 121 72 72 ;
49 121 72 158 ;
49 72 72 72 ;
49 72 72 158 ;
50 98 98 98 ;
50 98 98 158 ;
53 88 88 88 ;
54 62 62 62 ;
55 73 73 73 ;
57 72 72 72 ;
57 72 72 135 ;
57 72 72 79 ;
57 72 72 80 ;
57 72 72 140 ;
57 72 135 135 ;
57 72 135 79 ;
57 72 135 80 ;
57 72 135 140 ;
57 72 79 79 ;
57 72 79 80 ;
57 72 79 140 ;
57 72 80 80 ;
57 72 80 140 ;
57 72 140 140 ;
57 135 135 135 ;
57 135 135 79 ;
57 135 135 80 ;
57 135 135 140 ;
57 135 79 79 ;
57 135 79 80 ;
57 135 79 140 ;
57 135 80 80 ;
57 135 80 140 ;
57 135 140 140 ;
57 79 79 79 ;
57 79 79 80 ;
57 79 79 140 ;
57 79 80 80 ;
57 79 80 140 ;
57 79 140 140 ;
57 80 80 80 ;
57 80 80 140 ;
57 80 140 140 ;
57 140 140 140 ;
58 79 79 79 ;
60 119 119 119 ;
]);
M_.lhs = {
'u'; 
'sdf'; 
'lambda'; 
'multH'; 
'z'; 
'iH'; 
'phi'; 
'gamma'; 
'alpha*varrho*y/kY'; 
'w'; 
'd'; 
'varrho'; 
'1'; 
'q'; 
'gamma*kT'; 
'y'; 
'kT(-1)'; 
'xfactor*x'; 
'e'; 
'y*(1-eta1*mu^eta2)'; 
'log(aY)'; 
'pE'; 
'1/(1+rF)'; 
'realEPquat'; 
'rFquat'; 
'cyrat'; 
'kHkYrat'; 
'gy'; 
'gc'; 
'giT'; 
'c_x'; 
'SCC'; 
'vE*iotaE'; 
'iotaX*vX'; 
'vX'; 
'U'; 
'gq'; 
'gd'; 
'gE'; 
'X'; 
'asset_return'; 
'EPquat'; 
'Esdf'; 
'muSDF'; 
'varSDF'; 
'skewSDF'; 
'ln_pd'; 
'EC1'; 
'pB'; 
'EretB'; 
'bpann'; 
'ESCC'; 
'ln_SCC'; 
'ln_c'; 
'ln_y'; 
'ln_c100'; 
'ln_EP'; 
'ln_rF'; 
'ln_z'; 
'vE_irfs'; 
};
M_.static_tmp_nbr = [26; 10; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 1;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 5];
M_.block_structure_stat.block(1).variable = [ 30];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 21];
M_.block_structure_stat.block(2).variable = [ 16];
M_.block_structure_stat.block(3).Simulation_Type = 1;
M_.block_structure_stat.block(3).endo_nbr = 3;
M_.block_structure_stat.block(3).mfs = 3;
M_.block_structure_stat.block(3).equation = [ 37 39 59];
M_.block_structure_stat.block(3).variable = [ 34 36 55];
M_.block_structure_stat.block(4).Simulation_Type = 6;
M_.block_structure_stat.block(4).endo_nbr = 17;
M_.block_structure_stat.block(4).mfs = 17;
M_.block_structure_stat.block(4).equation = [ 6 7 8 9 35 33 12 13 14 15 16 17 18 19 20 2 34];
M_.block_structure_stat.block(4).variable = [ 4 10 12 14 2 59 11 9 13 3 5 6 17 58 7 1 60];
M_.block_structure_stat.block(5).Simulation_Type = 1;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 10];
M_.block_structure_stat.block(5).variable = [ 18];
M_.block_structure_stat.block(6).Simulation_Type = 3;
M_.block_structure_stat.block(6).endo_nbr = 1;
M_.block_structure_stat.block(6).mfs = 1;
M_.block_structure_stat.block(6).equation = [ 32];
M_.block_structure_stat.block(6).variable = [ 28];
M_.block_structure_stat.block(7).Simulation_Type = 3;
M_.block_structure_stat.block(7).endo_nbr = 1;
M_.block_structure_stat.block(7).mfs = 1;
M_.block_structure_stat.block(7).equation = [ 49];
M_.block_structure_stat.block(7).variable = [ 38];
M_.block_structure_stat.block(8).Simulation_Type = 1;
M_.block_structure_stat.block(8).endo_nbr = 3;
M_.block_structure_stat.block(8).mfs = 3;
M_.block_structure_stat.block(8).equation = [ 50 11 44];
M_.block_structure_stat.block(8).variable = [ 49 15 43];
M_.block_structure_stat.block(9).Simulation_Type = 3;
M_.block_structure_stat.block(9).endo_nbr = 1;
M_.block_structure_stat.block(9).mfs = 1;
M_.block_structure_stat.block(9).equation = [ 23];
M_.block_structure_stat.block(9).variable = [ 19];
M_.block_structure_stat.block(10).Simulation_Type = 3;
M_.block_structure_stat.block(10).endo_nbr = 1;
M_.block_structure_stat.block(10).mfs = 1;
M_.block_structure_stat.block(10).equation = [ 22];
M_.block_structure_stat.block(10).variable = [ 20];
M_.block_structure_stat.block(11).Simulation_Type = 1;
M_.block_structure_stat.block(11).endo_nbr = 12;
M_.block_structure_stat.block(11).mfs = 12;
M_.block_structure_stat.block(11).equation = [ 51 48 47 46 45 52 53 54 55 56 57 58];
M_.block_structure_stat.block(11).variable = [ 50 48 46 45 44 52 39 40 41 51 56 57];
M_.block_structure_stat.block(12).Simulation_Type = 3;
M_.block_structure_stat.block(12).endo_nbr = 1;
M_.block_structure_stat.block(12).mfs = 1;
M_.block_structure_stat.block(12).equation = [ 1];
M_.block_structure_stat.block(12).variable = [ 32];
M_.block_structure_stat.block(13).Simulation_Type = 1;
M_.block_structure_stat.block(13).endo_nbr = 5;
M_.block_structure_stat.block(13).mfs = 5;
M_.block_structure_stat.block(13).equation = [ 60 43 42 41 40];
M_.block_structure_stat.block(13).variable = [ 53 42 54 47 37];
M_.block_structure_stat.block(14).Simulation_Type = 3;
M_.block_structure_stat.block(14).endo_nbr = 1;
M_.block_structure_stat.block(14).mfs = 1;
M_.block_structure_stat.block(14).equation = [ 4];
M_.block_structure_stat.block(14).variable = [ 31];
M_.block_structure_stat.block(15).Simulation_Type = 1;
M_.block_structure_stat.block(15).endo_nbr = 11;
M_.block_structure_stat.block(15).mfs = 11;
M_.block_structure_stat.block(15).equation = [ 38 3 36 31 30 29 28 27 26 25 24];
M_.block_structure_stat.block(15).variable = [ 35 8 33 29 24 23 22 27 25 26 21];
M_.block_structure_stat.variable_reordered = [ 30 16 34 36 55 4 10 12 14 2 59 11 9 13 3 5 6 17 58 7 1 60 18 28 38 49 15 43 19 20 50 48 46 45 44 52 39 40 41 51 56 57 32 53 42 54 47 37 31 35 8 33 29 24 23 22 27 25 26 21];
M_.block_structure_stat.equation_reordered = [ 5 21 37 39 59 6 7 8 9 35 33 12 13 14 15 16 17 18 19 20 2 34 10 32 49 50 11 44 23 22 51 48 47 46 45 52 53 54 55 56 57 58 1 60 43 42 41 40 4 38 3 36 31 30 29 28 27 26 25 24];
M_.block_structure_stat.incidence.sparse_IM = [
 1 2;
 1 4;
 1 12;
 1 32;
 2 1;
 2 12;
 3 2;
 3 4;
 3 8;
 3 31;
 4 2;
 4 4;
 4 12;
 4 31;
 5 30;
 6 4;
 6 6;
 6 14;
 6 16;
 7 1;
 7 10;
 7 11;
 7 13;
 7 14;
 8 12;
 8 14;
 9 5;
 9 6;
 9 10;
 9 11;
 9 13;
 9 14;
 10 13;
 10 18;
 11 7;
 11 13;
 11 15;
 11 17;
 11 18;
 11 58;
 11 59;
 12 11;
 12 58;
 12 59;
 13 3;
 13 7;
 13 9;
 14 1;
 14 3;
 14 5;
 14 7;
 14 9;
 14 11;
 14 13;
 15 3;
 15 7;
 15 12;
 16 4;
 16 5;
 16 13;
 16 16;
 17 3;
 17 5;
 17 6;
 18 4;
 18 17;
 19 13;
 19 17;
 19 58;
 20 2;
 20 7;
 20 13;
 20 58;
 21 16;
 22 1;
 22 12;
 22 15;
 22 20;
 23 1;
 23 19;
 24 12;
 24 15;
 24 19;
 24 20;
 24 21;
 25 19;
 25 26;
 26 2;
 26 13;
 26 25;
 27 5;
 27 6;
 27 27;
 28 12;
 28 22;
 29 12;
 29 23;
 30 12;
 30 24;
 31 2;
 31 4;
 31 29;
 32 1;
 32 2;
 32 4;
 32 10;
 32 11;
 32 12;
 32 13;
 32 14;
 32 28;
 33 58;
 33 59;
 34 59;
 34 60;
 35 1;
 35 2;
 35 4;
 35 10;
 35 11;
 35 12;
 35 13;
 35 14;
 35 60;
 36 32;
 36 33;
 37 34;
 38 12;
 38 35;
 39 36;
 40 4;
 40 37;
 41 12;
 41 15;
 41 20;
 41 47;
 42 12;
 42 15;
 42 19;
 42 20;
 42 54;
 43 1;
 43 42;
 44 1;
 44 43;
 45 1;
 45 43;
 45 44;
 46 1;
 46 43;
 46 45;
 47 15;
 47 20;
 47 46;
 48 2;
 48 28;
 48 48;
 49 1;
 49 12;
 49 38;
 50 38;
 50 49;
 51 19;
 51 49;
 51 50;
 52 28;
 52 52;
 53 28;
 53 39;
 54 2;
 54 40;
 55 13;
 55 41;
 56 40;
 56 51;
 57 12;
 57 15;
 57 19;
 57 20;
 57 56;
 58 19;
 58 57;
 59 55;
 60 53;
 60 59;
];
M_.block_structure_stat.tmp_nbr = 20;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 5 11 13 2 4 5 3 5 10 16 1 2 3 4 5 5 15 6 7 17 2 4 5 7 9 8 9 2 4 5 9 11 14 15 8 9 10 12 4 9 11 12 1 4 12 13 14 6 7 14 15 8 9 10 15 2 5 9 16 5 17 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 1 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 6 6 6 7 7 7 7 7 8 8 9 9 9 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 5 8 12 17 19 22 27 29 36 40 44 47 49 53 57 61 63 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(7).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(7).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(7).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(8).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(8).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(8).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(9).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(9).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(9).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(10).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(10).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(10).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(11).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(11).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(11).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(12).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(12).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(12).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(13).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(13).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(13).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(14).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(14).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(14).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(15).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(15).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(15).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([2 7 14 22 23 32 35 43 44 45 46 49 1 3 4 20 26 31 32 35 48 54 13 14 15 17 1 3 4 6 16 18 31 32 35 40 9 14 16 17 27 6 9 17 27 11 13 14 15 20 3 13 14 7 9 32 35 7 9 12 14 32 35 1 2 4 8 15 22 24 28 29 30 32 35 38 41 42 49 57 7 9 10 11 14 16 19 20 26 32 35 55 6 7 8 9 32 35 11 22 24 41 42 47 57 6 16 21 11 18 19 10 11 23 24 25 42 51 57 58 22 24 41 42 47 57 24 28 29 30 26 25 27 32 48 52 53 31 5 3 4 1 36 36 37 38 39 40 49 50 53 54 56 55 43 44 45 46 45 46 47 41 48 50 51 51 56 52 60 42 59 57 58 11 12 19 20 33 11 12 33 34 60 34 35 ]);
M_.static_g1_sparse_colval = int32([1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 6 6 6 6 7 7 7 7 7 8 9 9 10 10 10 10 11 11 11 11 11 11 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 17 17 17 18 18 19 19 19 19 19 19 19 20 20 20 20 20 20 21 22 23 24 25 26 27 28 28 28 28 29 30 31 31 32 32 33 34 35 36 37 38 38 39 40 40 41 42 43 43 43 44 45 46 47 48 49 49 50 51 52 53 54 55 56 57 58 58 58 58 58 59 59 59 59 59 60 60 ]);
M_.static_g1_sparse_colptr = int32([1 13 23 27 37 42 46 51 52 54 58 64 81 93 99 106 109 112 114 121 127 128 129 130 131 132 133 134 138 139 140 142 144 145 146 147 148 149 151 152 154 155 156 159 160 161 162 163 164 166 167 168 169 170 171 172 173 174 179 184 186 ]);
addpath('../core_files')
M_.params(35) = 1;
eD = M_.params(35);
M_.params(36) = 1;
eC = M_.params(36);
M_.params(37) = 1;
eE = M_.params(37);
M_.params(38) = 1;
eG = M_.params(38);
M_.params(39) = 1;
aD = M_.params(39);
M_.params(40) = 1;
aC = M_.params(40);
M_.params(41) = 1;
aE = M_.params(41);
M_.params(42) = 1;
aG = M_.params(42);
M_.params(30) = 0.0123;
std_y = M_.params(30);
M_.params(16) = .0060;
gamma_sts = M_.params(16);
M_.params(18) = 0.9859;
rhoY = M_.params(18);
M_.params(13) = 4.09595;
eps = M_.params(13);
M_.params(12) = 0.94081;
mhab = M_.params(12);
M_.params(17) = 5.98712;
sigma = M_.params(17);
M_.params(11) = 0.68716;
thetaEZ = M_.params(11);
M_.params(19) = 0.00820;
deltaK = M_.params(19);
M_.params(14) = 0.11649;
squig = M_.params(14);
M_.params(15) = 0.98444;
beta = M_.params(15);
M_.params(1) = 0.16070;
nu = M_.params(1);
M_.params(2) = 1/(1-M_.params(11));
EIS = M_.params(2);
M_.params(6) = 4.3;
scale_y = M_.params(6);
M_.params(5) = 0.2727272727272727;
iotaX = M_.params(5);
M_.params(20) = 0.2;
Sg = M_.params(20);
M_.params(28) = 0.33;
alpha = M_.params(28);
M_.params(27) = 0.0021;
deltaX = M_.params(27);
M_.params(3) = 0;
xbar = M_.params(3);
M_.params(4) = 0.45;
iotaE = M_.params(4);
M_.params(8) = 3;
chi = M_.params(8);
M_.params(26) = 0.85;
zetaY_tilda = M_.params(26);
M_.params(22) = .029;
nH_sts = M_.params(22);
M_.params(21) = 0.2-M_.params(22);
nY_sts = M_.params(21);
M_.params(33) = 1;
vartheta = M_.params(33);
M_.params(34) = 0.0000;
vtax = M_.params(34);
M_.params(43) = 0.02;
eta1 = M_.params(43);
M_.params(44) = 2.6;
eta2 = M_.params(44);
M_.params(12) = 1;
mhab = M_.params(12);
M_.params(31) = 100;
xfactor = M_.params(31);
options_resid_ = struct();
display_static_residuals(M_, options_, oo_, options_resid_);
%
% HISTVAL instructions
%
M_.histval_dseries = dseries(zeros(M_.orig_maximum_lag_with_diffs_expanded, M_.orig_endo_nbr+M_.exo_nbr), dates(sprintf('%dY', -M_.orig_maximum_lag_with_diffs_expanded+1)), [ M_.endo_names(1:M_.orig_endo_nbr); M_.exo_names; ]);
M_.histval_dseries{'x'}(dates('0Y'))=60/M_.params(31);
if exist(['+' M_.fname '/dynamic_set_auxiliary_series.m'])
  eval(['M_.histval_dseries = ' M_.fname '.dynamic_set_auxiliary_series(M_.histval_dseries, M_.params);']);
end
M_.endo_histval = M_.histval_dseries{M_.endo_names{:}}(dates(sprintf('%dY', 1-M_.maximum_lag)):dates('0Y')).data';
M_.endo_histval(isnan(M_.endo_histval)) = 0;
M_.exo_histval = M_.histval_dseries{M_.exo_names{:}}(dates(sprintf('%dY', 1-M_.maximum_lag)):dates('0Y')).data';
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
options_.k_order_solver = true;
options_.ar = 0;
options_.irf = 0;
options_.nocorr = true;
options_.nofunctions = true;
options_.nomoments = true;
options_.noprint = true;
options_.order = 3;
options_.pruning = true;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'call_CARA_results.mat'], 'options_mom_', '-append');
end
disp('Note: 5 warning(s) encountered in the preprocessor')
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
